<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wwl.app.domain.prd.dao.PrdDAO">
	
	<select id="getProductMtList" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductMtList
			 * Description : 시술 대분류 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.11  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT
				   PRD_MST_CODE	-- 대분류시술코드
				 , PRD_MST_NAME	-- 대분류시술명
			  FROM PRODUCT_SURGICAL_MASTER
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND DISPLAY_YN 	 = 'Y'
			 ORDER BY SORT_ORDER
		]]>
	</select>
	
	<update id="updateProductMt" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProductMt
			 * Description : 시술 대분류 저장
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.28  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL_MASTER (
				  OFFICE_CODE				
				, PRD_MST_CODE	
				, PRD_MST_NAME	
				, SORT_ORDER	
				, CREATE_USER	
				, CREATE_DATE						
			) VALUES (
			 	  #{officeCode}			
				, IF(#{prdMstCode} = '', 
						(SELECT CONCAT('Y', LPAD(IFNULL(MAX(SUBSTR(PRD_MST_CODE, 2)), 0) + 1, 4, '0'))
  						   FROM PRODUCT_SURGICAL_MASTER A
  						  WHERE OFFICE_CODE	= #{officeCode}),
						 #{prdMstCode})
				, #{prdMstName}	
				, #{sortOrder}
				, #{createUser}	
				, NOW()
			)
			ON DUPLICATE KEY
			UPDATE PRD_MST_NAME	= #{prdMstName}
				 , SORT_ORDER   = #{sortOrder}
		]]>					
	</update>
	
	<update id="updateMoveProductMt" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateMoveProductMt
			 * Description : 삭제 전 대분류 코드 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[	
			UPDATE PRODUCT_SURGICAL_TMP
			   SET PRD_MST_CODE  = #{mPrdMstCode}
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_MST_CODE  = #{prdMstCode}
		]]>
	</update>
	
	<delete id="deleteProductMtEvent" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteProductMtEvent
			 * Description : 대분류 관련 모든 이벤트 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[	
			DELETE E1 
				 , E2
				 , E3
				 , E4
				 , E5
			  FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP E1
			       INNER JOIN (
								SELECT P1.PRD_MST_CODE
									 , P4.PRD_ITEM_CODE
								  FROM PRODUCT_SURGICAL_MASTER P1
									   LEFT OUTER JOIN PRODUCT_SURGICAL_TMP P2
										 ON P1.OFFICE_CODE   = P2.OFFICE_CODE
										AND P1.PRD_MST_CODE  = P2.PRD_MST_CODE
									   LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_TMP P3
										 ON P2.OFFICE_CODE   = P3.OFFICE_CODE
										AND P2.PRD_CODE      = P3.PRD_CODE
									   LEFT OUTER JOIN PRODUCT_SURGICAL_ITEM_TMP P4
										 ON P3.OFFICE_CODE   = P4.OFFICE_CODE
										AND P3.PRD_SUB_CODE  = P4.PRD_SUB_CODE 
								 WHERE P1.OFFICE_CODE   = #{officeCode}
								   AND P1.PRD_MST_CODE  = #{prdMstCode}
								   AND P4.PRD_ITEM_CODE IS NOT NULL
			       ) P1
			       ON E1.PRD_ITEM_CODE = P1.PRD_ITEM_CODE
				   LEFT OUTER JOIN EVENT_GROUP_TMP E2
			         ON E1.OFFICE_CODE   = E2.OFFICE_CODE
			        AND E1.EVENT_SEQ	 = E2.EVENT_SEQ
			       LEFT OUTER JOIN EVENT_GROUP_SUB_TMP E3
			         ON E1.OFFICE_CODE   = E3.OFFICE_CODE
			        AND E1.EVENT_SEQ	 = E3.EVENT_SEQ
				   LEFT OUTER JOIN EVENT_PRODUCT_SURGICAL_TMP E4
			         ON E1.OFFICE_CODE   = E4.OFFICE_CODE
			        AND E1.EVENT_SEQ	 = E4.EVENT_SEQ
				   LEFT OUTER JOIN EVENT_PRODUCT_PAGE_TMP E5
			         ON E1.OFFICE_CODE   = E5.OFFICE_CODE
			        AND E1.EVENT_SEQ	 = E5.EVENT_SEQ 
			 WHERE E1.OFFICE_CODE = #{officeCode}								
   		]]>
	</delete>
	
	<delete id="deleteProductMt" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteProductMt
			 * Description : 대분류 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE P1
				 , P2
				 , P3
				 , P4
				 , P5
				 , P6 
			  FROM PRODUCT_SURGICAL_MASTER P1
				   LEFT OUTER JOIN PRODUCT_SURGICAL_TMP P2
			         ON P1.OFFICE_CODE   = P2.OFFICE_CODE
			        AND P1.PRD_MST_CODE  = P2.PRD_MST_CODE
				   LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_TMP P3
			         ON P2.OFFICE_CODE   = P3.OFFICE_CODE
			        AND P2.PRD_CODE      = P3.PRD_CODE
				   LEFT OUTER JOIN PRODUCT_SURGICAL_ITEM_TMP P4
			         ON P3.OFFICE_CODE   = P4.OFFICE_CODE
			        AND P3.PRD_SUB_CODE  = P4.PRD_SUB_CODE
				   LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_CATEGORY P5
			         ON P3.OFFICE_CODE   = P5.OFFICE_CODE
			        AND P3.PRD_SUB_CODE  = P5.PRD_SUB_CODE
				   LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_CATEGORY P6
			         ON P3.OFFICE_CODE   = P6.OFFICE_CODE
			        AND P3.PRD_SUB_CODE  = P6.PRD_SUB_CODE	   
			 WHERE P1.OFFICE_CODE   = #{officeCode}
			   AND P1.PRD_MST_CODE  = #{prdMstCode}
   		]]>
	</delete>
	
	<select id="getProductMtSubList" parameterType="camelHashMap" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductMtSubList
			 * Description : 대분류별 소분류 리스트 조회(예약설정, 자동승인 페이지 사용)
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.17  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   P1.PRD_SUB_CODE -- 소분류시술코드
				 , P1.PRD_SUB_NAME -- 소분류시술명
			  FROM PRODUCT_SURGICAL_SUB_TMP P1
				   INNER JOIN (
								SELECT 
									   OFFICE_CODE
									 , PRD_CODE
			                         , PRD_MST_CODE
								  FROM PRODUCT_SURGICAL_TMP
								 WHERE OFFICE_CODE	 = #{officeCode}
								   AND PRD_MST_CODE  = #{prdMstCode}
					  ) P2
					 ON P1.OFFICE_CODE = P2.OFFICE_CODE
	                AND P1.PRD_CODE	   = P2.PRD_CODE
			 WHERE P1.DISPLAY_YN = 'Y'
		]]>
		<if test="resDate != null and resDate != '' and dataDay != null and dataDay != ''">	
			<![CDATA[
				   AND P1.PRD_SUB_CODE NOT IN (SELECT PRD_SUB_CODE
												 FROM HOSPITAL_RESERVE_SUB
												WHERE OFFICE_CODE   = #{officeCode}
												  AND RES_DATE 		= #{resDate}
												  AND DATA_DAY 		= #{dataDay}
											  )
			]]>
		</if>
			 ORDER BY 
			 	P1.PRD_CODE, P1.SORT_ORDER		
	</select>
	
	<select id="getProductList" parameterType="camelHashMap" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductList
			 * Description : 시술 중분류 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.11  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT
				   FN_GET_HOSPITAL_NAME(OFFICE_CODE) AS HOSPITAL_NAME
		       	 , PRD_MST_CODE	-- 대분류시술코드
				 , PRD_CODE		-- 중분류시술코드
				 , PRD_NAME		-- 중분류시술명
				 , DISPLAY_YN	-- 노출여부
			  FROM PRODUCT_SURGICAL_TMP
			 WHERE OFFICE_CODE   = #{officeCode}
		]]>		
   		 <if test="prdMstCode != null and prdMstCode != ''">		     
		       AND PRD_MST_CODE  = #{prdMstCode}			  
		 </if>			   
 			   ORDER BY 
					SORT_ORDER, IF(DISPLAY_YN = 'Y', 1, 2)
	</select>
	
	<insert id="insertProduct" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertProduct
			 * Description : 시술 중분류 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.12  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL_TMP (
				  OFFICE_CODE	
				, PRD_CODE	
				, PRD_NAME	
				, PRD_MST_CODE	
				, DISPLAY_YN	
				, SORT_ORDER	
				, CREATE_USER	
				, CREATE_DATE	
			) VALUES (
				  #{officeCode}	
                , (SELECT CONCAT('X' , LPAD(SUBSTRING(IFNULL(MAX(PRD_CODE), 'X0000'), 2) + 1 , 4 , 0))
				     FROM PRODUCT_SURGICAL_TMP A
   					WHERE OFFICE_CODE   = #{officeCode}) 
				, #{prdName}	
				, #{prdMstCode}	
				, 'Y'	
				, (SELECT IFNULL(MAX(SORT_ORDER),0) + 1
					 FROM PRODUCT_SURGICAL_TMP A
					WHERE OFFICE_CODE   = #{officeCode}) 
				, #{createUser}
				, NOW()
			) 
		]]>
	</insert>
	
	<update id="updateProduct" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProduct
			 * Description : 시술 중분류 수정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.12  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_TMP
			   SET PRD_NAME 	 = #{prdName}
			     , PRD_MST_CODE  = #{prdMstCode}
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_CODE		 = #{prdCode}
		]]>
	</update>
	
	<update id="updateProductDisplay" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProductDisplay
			 * Description : 시술 중/소분류 노출변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.12  이승현      최초 생성
		     */
		]]>		
		<choose>
	 		<when test="prdCode != null and prdCode != ''">
	    		<![CDATA[
					UPDATE PRODUCT_SURGICAL_TMP
					   SET DISPLAY_YN	 = #{displayYn}
					 WHERE OFFICE_CODE   = #{officeCode}
					   AND PRD_CODE		 = #{prdCode}
				]]>
	   	 	</when>
	 	 	<otherwise>
	  	  		<![CDATA[
					UPDATE PRODUCT_SURGICAL_SUB_TMP
					   SET DISPLAY_YN	 = #{displayYn}
					 WHERE OFFICE_CODE   = #{officeCode}
					   AND PRD_SUB_CODE	 = #{prdSubCode}
				]]>
	  	 	</otherwise>    
	  	</choose>		
	</update>
	
	<select id="getProductSubList" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductSubList
			 * Description : 시술 소분류 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.11  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT
				   PSS.PRD_CODE         -- 중분류시술코드
				 , PSS.PRD_SUB_CODE		-- 소분류시술코드
				 , PSS.PRD_SUB_NAME		-- 소분류시술명
				 , PSS.PRD_SUB_CONTENT	-- 상세설명
				 , CASE WHEN PSS.PRD_SUB_PRICE <> 0 THEN FORMAT(PSS.PRD_SUB_PRICE, 0)
						ELSE CASE WHEN IFNULL(PSI.PRICE, 0) = 0 AND IFNULL(PSI.EVENT_SALE, 0) = 0 THEN '0'
								  WHEN IFNULL(PSI.PRICE, 0) = 0 THEN FORMAT(IFNULL(PSI.EVENT_SALE, 0), 0)
								  WHEN IFNULL(PSI.EVENT_SALE, 0) = 0 THEN FORMAT(IFNULL(PSI.PRICE, 0), 0)
								  ELSE IF(IFNULL(PSI.PRICE, 0) > IFNULL(PSI.EVENT_SALE, 0), FORMAT(PSI.EVENT_SALE, 0), FORMAT(PSI.PRICE, 0))                                                                    
							  END 
					END PRD_SUB_PRICE
				 , PSS.DISPLAY_YN		-- 노출여부
				 , PSS.PRD_SUB_TYPE     -- 소분류 타입
				 , CONCAT('https://beautyall.app/files/', HOI.HOSPITAL_CODE, '/', HOI.OFFICE_CODE, PSS.PRD_SUB_IMAGE) AS PRD_SUB_IMAGE -- 소분류 이미지
				 , PSS.PRD_SUB_VIDEO    -- 소분류 비디오
			  FROM PRODUCT_SURGICAL_SUB_TMP PSS
			       INNER JOIN HOSPITAL_OFFICE_INFO HOI
			          ON PSS.OFFICE_CODE = HOI.OFFICE_CODE
			  	   LEFT OUTER JOIN (
				  	 				SELECT 
									  	   MAX(A.PRD_SUB_CODE) AS PRD_SUB_CODE	  
										 , MIN(A.PRICE) AS PRICE
										 , IFNULL(B.EVENT_SALE, 0) AS EVENT_SALE
									  FROM PRODUCT_SURGICAL_ITEM_TMP A
										   LEFT OUTER JOIN (
															SELECT 
																   E1.PRD_SUB_CODE
																 , MIN(E2.EVENT_SALE) AS EVENT_SALE
															  FROM EVENT_PRODUCT_PAGE_TMP E1
																   INNER JOIN EVENT_PRODUCT_SURGICAL_TMP E2
																	  ON E1.OFFICE_CODE   	   = E2.OFFICE_CODE
																	 AND E1.EVENT_SEQ     	   = E2.EVENT_SEQ
																	 AND E1.EVENT_SUB_SEQ      = E2.EVENT_SUB_SEQ
																	 AND E1.EVENT_PRODUCT_CODE = E2.EVENT_PRODUCT_CODE
															 WHERE E1.OFFICE_CODE   = #{officeCode}
															 GROUP BY E1.PRD_SUB_CODE
											  ) B
											 ON A.PRD_SUB_CODE = B.PRD_SUB_CODE
									   WHERE A.OFFICE_CODE   = #{officeCode}
	  								     AND A.DISPLAY_YN    = 'Y'
									   GROUP BY A.PRD_SUB_CODE
			  	     ) PSI
			  	    ON PSS.PRD_SUB_CODE  = PSI.PRD_SUB_CODE
			 WHERE PSS.OFFICE_CODE   = #{officeCode}			  
			   AND PSS.USE_YN		 = 'Y'			   
		]]>	   
		<!-- 중분류 코드로 소분류를 검색하고 특정 소분류를 검색할 때는 중분류 코드를 넘기지 않는다. -->
		<if test="prdItemName != null and prdItemName != ''">
			AND (PSS.PRD_SUB_NAME LIKE TRIM(CONCAT('%',#{prdItemName},'%')) 
			 	 	  OR PSS.PRD_SUB_CONTENT LIKE TRIM(CONCAT('%',#{prdItemName},'%')))
		</if>
		<if test="prdSubCode != null and prdSubCode != ''">
			AND PSS.PRD_SUB_CODE = #{prdSubCode}	
		</if>		
		<if test="prdCode != null and prdCode != ''">
			AND PSS.PRD_CODE = #{prdCode}
		</if>
		<choose>
			<when test="sort == 'name'">
				ORDER BY PSS.PRD_SUB_NAME
			</when>
			<otherwise>
			 	ORDER BY PSS.SORT_ORDER
			</otherwise>
		</choose>						
	</select>
	
	<select	id="getProductSubDtList" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductSubDtList
			 * Description : 시술 상세 페이지 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.12  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT
				   PSM.OFFICE_CODE
                 , PSM.PRD_MST_CODE	 -- 대분류시술코드
                 , PSM.PRD_MST_NAME	 -- 대분류시술명                 
			     , PS.PRD_CODE		 -- 중분류시술코드
			     , PS.PRD_NAME     	 -- 중분류시술명
				 , PSS.PRD_SUB_CODE	 -- 소분류시술코드
			     , PSS.PRD_SUB_NAME  -- 소분류시술명
				 , PSS.PRD_SUB_PRICE -- 가격
				 , PSS.DISPLAY_YN	 -- 노출여부
				 , PSS.SORT_ORDER	 -- 출력순서
			  FROM PRODUCT_SURGICAL_MASTER PSM
                   INNER JOIN PRODUCT_SURGICAL_TMP PS
					  ON PSM.OFFICE_CODE   = PS.OFFICE_CODE
                     AND PSM.PRD_MST_CODE  = PS.PRD_MST_CODE
				   INNER JOIN (
								SELECT 
									   X1.OFFICE_CODE
									 , X1.PRD_SUB_CODE
									 , X1.PRD_SUB_NAME									 
					  		         , CASE WHEN X1.PRD_SUB_PRICE <> 0 THEN CONCAT('(입력) ', FORMAT(X1.PRD_SUB_PRICE,0))
											WHEN X1.PRD_SUB_PRICE =  0 THEN CASE WHEN IFNULL(X2.PRICE, 0) = 0 AND IFNULL(X2.EVENT_SALE, 0) = 0 THEN '-'
																				 WHEN IFNULL(X2.PRICE, 0) = 0 THEN FORMAT(IFNULL(X2.EVENT_SALE, 0), 0)
			                                                                     WHEN IFNULL(X2.EVENT_SALE, 0) = 0 THEN FORMAT(IFNULL(X2.PRICE, 0), 0)
			                                                                     ELSE IF(IFNULL(X2.PRICE, 0) > IFNULL(X2.EVENT_SALE, 0), FORMAT(X2.EVENT_SALE, 0), FORMAT(X2.PRICE, 0))                                                                    
																			 END 
										END PRD_SUB_PRICE
									 , X1.PRD_CODE
									 , IF(IFNULL(X1.DISPLAY_YN, 'N') = 'N', '미노출', '노출') DISPLAY_YN
									 , X1.SORT_ORDER
								  FROM PRODUCT_SURGICAL_SUB_TMP X1
									   LEFT OUTER JOIN (
													     SELECT 
																MAX(A.PRD_SUB_CODE) AS PRD_SUB_CODE	  
															  , MIN(A.PRICE) AS PRICE
															  , IFNULL(B.EVENT_SALE, 0) AS EVENT_SALE
														   FROM PRODUCT_SURGICAL_ITEM_TMP A
																LEFT OUTER JOIN (
																				SELECT 
																					   E1.PRD_SUB_CODE
																					 , MIN(E2.EVENT_SALE) AS EVENT_SALE
																				  FROM EVENT_PRODUCT_PAGE_TMP E1
																					   INNER JOIN EVENT_PRODUCT_SURGICAL_TMP E2
																						  ON E1.OFFICE_CODE   	   = E2.OFFICE_CODE
																						 AND E1.EVENT_SEQ     	   = E2.EVENT_SEQ
																						 AND E1.EVENT_SUB_SEQ      = E2.EVENT_SUB_SEQ
																						 AND E1.EVENT_PRODUCT_CODE = E2.EVENT_PRODUCT_CODE
																				 WHERE E1.OFFICE_CODE   = #{officeCode}
																				 GROUP BY E1.PRD_SUB_CODE
																 ) B
																ON A.PRD_SUB_CODE = B.PRD_SUB_CODE
														  WHERE A.OFFICE_CODE   = #{officeCode}
															AND A.DISPLAY_YN    = 'Y'
														  GROUP BY A.PRD_SUB_CODE
													  ) X2
									    ON X1.PRD_SUB_CODE  = X2.PRD_SUB_CODE
								 WHERE X1.USE_YN = 'Y'								   
		]]>
		<if test="officeCode != null and officeCode != ''">		     
		      					   AND X1.OFFICE_CODE   = #{officeCode}			  
		</if>								
								) PSS
					 ON PS.OFFICE_CODE   = PSS.OFFICE_CODE         
					AND PS.PRD_CODE      = PSS.PRD_CODE	   
			  WHERE 1=1				
		<if test="officeCode != null and officeCode != ''">		     
		      AND PSM.OFFICE_CODE   = #{officeCode}			  
		</if>
		<if test="prdMstCode != null and prdMstCode != ''">
              AND PSM.PRD_MST_CODE  = #{prdMstCode} 
		</if>
		<if test="prdCode != null and prdCode != ''">
              AND PS.PRD_CODE       = #{prdCode} 
		</if>
		<if test="field != null and field != ''">
              AND PSS.PRD_SUB_NAME LIKE TRIM(CONCAT('%',#{field},'%'))
		</if>		
			ORDER BY 
				PSM.SORT_ORDER, PS.SORT_ORDER, PSS.SORT_ORDER			         
	</select>
	
	<select	id="getProductSurgicalSub" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductSurgicalSub
			 * Description : 시술 상세(상단) 페이지 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.19  진가영      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				  PSS.PRD_SUB_NAME
			    , PSS.PRD_SUB_CONTENT
			    , IF(PSS.PRD_SUB_PRICE = 0, '', FORMAT(PSS.PRD_SUB_PRICE,0)) PRD_SUB_PRICE
			    , PSS.PRD_SUB_TYPE
			    , CONCAT('https://beautyall.app/files/', HOI.HOSPITAL_CODE, '/', HOI.OFFICE_CODE, PSS.PRD_SUB_IMAGE) AS PRD_SUB_IMAGE
			    , PSS.PRD_SUB_VIDEO
			 FROM PRODUCT_SURGICAL_SUB_TMP PSS
			      INNER JOIN HOSPITAL_OFFICE_INFO HOI
			         ON PSS.OFFICE_CODE = HOI.OFFICE_CODE
			WHERE PSS.OFFICE_CODE   = #{officeCode}
			  AND PSS.PRD_SUB_CODE  = #{prdSubCode}
		]]>
	</select>
	
	<select	id="getProductSubCategory" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="camelHashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductSubCategory
			 * Description : 시술 상세 카테고리 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.27  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   C1.COMMON_CODE AS CODE
				 , C1.COMMON_NAME AS NAME
			     , IF(IFNULL(C2.SORT_ORDER, 'Y') = 'Y', C1.SORT_ORDER, C2.SORT_ORDER) SORT_ORDER
			  FROM COMMON_CODE C1
			       LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_CATEGORY C2
			         ON C1.COMMON_CODE  = C2.CATEGORY_CODE         
			        AND C2.OFFICE_CODE  = #{officeCode}
			        AND C2.PRD_SUB_CODE = #{prdSubCode}
			 WHERE C1.GROUP_CODE = 'PRD001'   
			 ORDER BY SORT_ORDER
		]]>
	</select>
	
	<update id="updateProductSubCategory" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProductSubCategory
			 * Description : 시술 상세 카테고리 순서 저장
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.27  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL_SUB_CATEGORY (
				  OFFICE_CODE	
				, PRD_SUB_CODE	
				, CATEGORY_CODE	
				, SORT_ORDER						
			) VALUES (
			      #{officeCode}
				, #{prdSubCode}
				, #{categoryCode}	
				, #{sortOrder}
			) 
			ON DUPLICATE KEY
			UPDATE SORT_ORDER = #{sortOrder}
		]]>		
	</update>
	
	<select	id="getProductSubDtInfo" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductSubDtInfo
			 * Description : 시술 상세 페이지 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.15  이승현      최초 생성
			 * 2022.07.28  이승현      상세 노출 순서 추가
		     */
		]]>
		<![CDATA[
			SELECT 
				   P1.PRD_SUB_CODE
				 , P1.PRD_DETAIL_SEQ	
			     , P1.DETAIL_TYPE     	-- 상세타입
			     , IF(P1.DETAIL_TYPE = 'H',
						CONCAT(P1.DETAIL_CONTENT , '\n', 
							   P4.PRD_SUB_TYPE   , '\n', 
                               P4.PRD_SUB_NAME   , '\n',  
							   REPLACE(P4.PRD_SUB_CONTENT, '\r\n', '<br>'), '\n', 
							   P4.PRD_SUB_PRICE),
                        P1.DETAIL_CONTENT
                   ) AS DETAIL_CONTENT  -- 상세내용 
                 , CASE WHEN P1.DETAIL_TYPE = 'H' THEN P4.PRD_SUB_VIDEO
                        ELSE P1.DETAIL_CONTENT2
					END DETAIL_CONTENT2	-- 상세내용2(Q&A에 사용)
			     , CASE WHEN P1.DETAIL_TYPE = 'G' THEN P1.DETAIL_IMAGE
						WHEN P1.DETAIL_TYPE = 'H' THEN P4.PRD_SUB_IMAGE
                        ELSE ''
					END DETAIL_IMAGE	-- 이미지
			     , P1.SORT_ORDER
			     , IF(P1.PARENT_DETAIL_SEQ = P2.PRD_DETAIL_SEQ, P2.SORT_ORDER, P1.SORT_ORDER) GROUP_ORDER
			  FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP P1
				   LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_DETAIL_TMP P2
					 ON P1.OFFICE_CODE   	 = P2.OFFICE_CODE
					AND P1.PRD_SUB_CODE	     = P2.PRD_SUB_CODE
			        AND P1.PARENT_DETAIL_SEQ = P2.PRD_DETAIL_SEQ
			       LEFT OUTER JOIN (
									SELECT 
										   C1.COMMON_CODE
										 , IF(IFNULL(C2.SORT_ORDER, 'Y') = 'Y', C1.SORT_ORDER, C2.SORT_ORDER) AS DETAIL_SORT_ORDER
									  FROM COMMON_CODE C1
										   LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_CATEGORY C2
											 ON C1.COMMON_CODE  = C2.CATEGORY_CODE         
											AND C2.OFFICE_CODE  = #{officeCode}
											AND C2.PRD_SUB_CODE = #{prdSubCode}
									 WHERE C1.GROUP_CODE = 'PRD001'   
			        ) P3
	   			   ON P1.DETAIL_TYPE = P3.COMMON_CODE
	   			   LEFT OUTER JOIN (
									SELECT
										   PSS.PRD_SUB_CODE		-- 소분류시술코드
										 , IFNULL(PSS.PRD_SUB_TYPE, 'none') AS PRD_SUB_TYPE -- 타입
										 , PSS.PRD_SUB_NAME		-- 소분류시술명
										 , PSS.PRD_SUB_CONTENT	-- 상세설명                                         
                                         , CONCAT('https://beautyall.app/files/', HOI.HOSPITAL_CODE, '/', HOI.OFFICE_CODE, PSS.PRD_SUB_IMAGE) AS PRD_SUB_IMAGE -- 이미지파일
                                         , PSS.PRD_SUB_VIDEO	-- 비디오링크
										 , CASE WHEN PSS.PRD_SUB_PRICE <> 0 THEN FORMAT(PSS.PRD_SUB_PRICE, 0)
												WHEN PSS.PRD_SUB_PRICE = 0  THEN CASE WHEN IFNULL(PSI.PRICE, 0) = 0 AND IFNULL(PSI.EVENT_SALE, 0) = 0 THEN '0'
																					  WHEN IFNULL(PSI.PRICE, 0) = 0 THEN FORMAT(IFNULL(PSI.EVENT_SALE, 0), 0)
																					  WHEN IFNULL(PSI.EVENT_SALE, 0) = 0 THEN FORMAT(IFNULL(PSI.PRICE, 0), 0)
																					  ELSE IF(IFNULL(PSI.PRICE, 0) > IFNULL(PSI.EVENT_SALE, 0), FORMAT(PSI.EVENT_SALE, 0), FORMAT(PSI.PRICE, 0))                                                                    
																				  END 
											END PRD_SUB_PRICE
									  FROM PRODUCT_SURGICAL_SUB_TMP PSS
									       INNER JOIN HOSPITAL_OFFICE_INFO HOI
									          ON PSS.OFFICE_CODE = HOI.OFFICE_CODE
										   LEFT OUTER JOIN (
														 	 SELECT 
																	MAX(A.PRD_SUB_CODE) AS PRD_SUB_CODE	  
																  , MIN(A.PRICE) AS PRICE
																  , IFNULL(B.EVENT_SALE, 0) AS EVENT_SALE
															   FROM PRODUCT_SURGICAL_ITEM_TMP A
																	LEFT OUTER JOIN (
																					SELECT 
																						   E1.PRD_SUB_CODE
																						 , MIN(E2.EVENT_SALE) AS EVENT_SALE
																					  FROM EVENT_PRODUCT_PAGE_TMP E1
																						   INNER JOIN EVENT_PRODUCT_SURGICAL_TMP E2
																							  ON E1.OFFICE_CODE   	   = E2.OFFICE_CODE
																							 AND E1.EVENT_SEQ     	   = E2.EVENT_SEQ
																							 AND E1.EVENT_SUB_SEQ      = E2.EVENT_SUB_SEQ
																							 AND E1.EVENT_PRODUCT_CODE = E2.EVENT_PRODUCT_CODE
																					 WHERE E1.OFFICE_CODE   = #{officeCode}
																					 GROUP BY E1.PRD_SUB_CODE
																	 ) B
																	ON A.PRD_SUB_CODE = B.PRD_SUB_CODE
															  WHERE A.OFFICE_CODE   = #{officeCode}
																AND A.DISPLAY_YN    = 'Y'
															  GROUP BY A.PRD_SUB_CODE
														  ) PSI
											ON PSS.PRD_SUB_CODE  = PSI.PRD_SUB_CODE
									 WHERE PSS.OFFICE_CODE   = #{officeCode}		  
									   AND PSS.USE_YN		 = 'Y'
                   ) P4
                   ON P1.DETAIL_CONTENT = P4.PRD_SUB_CODE
			 WHERE P1.OFFICE_CODE   = #{officeCode}
			   AND P1.PRD_SUB_CODE  = #{prdSubCode}
			 ORDER BY
	  			P3.DETAIL_SORT_ORDER, 
	  			GROUP_ORDER, IF(P1.PARENT_DETAIL_SEQ = 0, 0, P1.SORT_ORDER)
		]]>
	</select>
	
	<select id="getEventItemList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventItemList
			 * Description : 시술 상세 이벤트 시술 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.02  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   P1.PRD_SUB_CODE			-- 소분류코드
				 , P1.DISPLAY_YN			-- 노출여부
				 , P2.EVENT_SEQ				-- 중그룹코드
				 , P2.EVENT_SUB_SEQ			-- 소그룹코드
				 , P2.EVENT_PRODUCT_CODE	-- 이벤트시술코드
				 , P2.EVENT_PRODUCT_TYPE	-- 이벤트시술타입	 
				 , P2.EVENT_PRODUCT_TITLE	-- 이벤트시술제목
				 , P2.EVENT_PRODUCT_CONTENT	-- 이벤트시술내용
				 , P2.EVENT_SALE			-- 이벤트시술할인가
				 , P2.EVENT_PRICE			-- 이벤트시술정상가	 
				 , P2.SORT_ORDER			-- 출력순서
				 , P2.PRD_ITEM_NAME
			  FROM EVENT_PRODUCT_PAGE_TMP P1
				   INNER JOIN (
								SELECT   
									   Z1.OFFICE_CODE
									 , Z1.EVENT_SEQ
									 , Z1.EVENT_SUB_SEQ
									 , Z1.EVENT_PRODUCT_CODE
									 , Z1.EVENT_PRODUCT_TYPE
									 , Z1.EVENT_PRODUCT_TITLE
									 , Z1.EVENT_PRODUCT_CONTENT
									 , Z1.EVENT_SALE
									 , Z1.EVENT_PRICE
									 , Z1.SORT_ORDER
									 , IF(Z1.EVENT_PRODUCT_TYPE = 'C', GROUP_CONCAT(Z1.PRD_ITEM_NAME ORDER BY Z1.SORT_ORDER SEPARATOR '\n'), Z1.PRD_ITEM_NAME) PRD_ITEM_NAME
								  FROM (
								  	    SELECT 
											   Y1.OFFICE_CODE
											 , Y1.EVENT_SEQ
											 , Y1.EVENT_SUB_SEQ
											 , Y1.EVENT_PRODUCT_CODE
											 , Y1.EVENT_PRODUCT_TYPE
											 , Y1.EVENT_PRODUCT_TITLE
											 , Y1.EVENT_PRODUCT_CONTENT
											 , FORMAT(Y1.EVENT_SALE,0) EVENT_SALE
											 , FORMAT(Y1.EVENT_PRICE,0) EVENT_PRICE
											 , Y1.SORT_ORDER
											 , CASE WHEN Y1.EVENT_PRODUCT_TYPE = 'P' THEN IF(Y1.PACKAGE_DISPLAY_YN = 'Y', Y1.PACKAGE_CONTENT, '')													
													ELSE ''
												END PRD_ITEM_NAME
										  FROM EVENT_PRODUCT_SURGICAL_TMP Y1
										 WHERE Y1.OFFICE_CODE   	  = #{officeCode}
                                           AND Y1.EVENT_PRODUCT_TYPE <> 'C'
                                           AND Y1.DISPLAY_YN 	      = 'Y'	
										 UNION ALL
										SELECT 
											   Y1.OFFICE_CODE
											 , Y1.EVENT_SEQ
											 , Y1.EVENT_SUB_SEQ
											 , Y1.EVENT_PRODUCT_CODE
											 , Y1.EVENT_PRODUCT_TYPE
											 , Y1.EVENT_PRODUCT_TITLE
											 , Y1.EVENT_PRODUCT_CONTENT
											 , FORMAT(Y1.EVENT_SALE,0) EVENT_SALE
											 , FORMAT(Y1.EVENT_PRICE,0) EVENT_PRICE											 
											 , Y2.SORT_ORDER
											 , CONCAT(Y2.REMARK, ' Point 차감) ', Y2.PRD_ITEM_NAME) AS PRD_ITEM_NAME
										  FROM EVENT_PRODUCT_SURGICAL_TMP Y1
											   INNER JOIN (
															SELECT 
																   X1.OFFICE_CODE
																 , X1.EVENT_SEQ
																 , X1.EVENT_SUB_SEQ
																 , X1.EVENT_PRODUCT_CODE
																 , X1.EVENT_DETAIL_SEQ
																 , X1.REMARK
																 , X1.EVENT_DETAIL_SEQ AS SORT_ORDER
																 , GROUP_CONCAT(X2.PRD_ITEM_NAME ORDER BY X1.SORT_ORDER) AS PRD_ITEM_NAME
															  FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP X1													 
																   INNER JOIN PRODUCT_SURGICAL_ITEM_TMP X2				 
																      ON X1.OFFICE_CODE   = X2.OFFICE_CODE																  
																     AND X1.PRD_ITEM_CODE = X2.PRD_ITEM_CODE
															WHERE X1.OFFICE_CODE   = #{officeCode}  
															GROUP BY 
																X1.EVENT_SEQ, X1.EVENT_SUB_SEQ, X1.EVENT_PRODUCT_CODE, X1.EVENT_DETAIL_SEQ
												  ) Y2
										  	     ON Y1.OFFICE_CODE 	      = Y2.OFFICE_CODE													 
										  	    AND Y1.EVENT_SEQ 		  = Y2.EVENT_SEQ
											    AND Y1.EVENT_SUB_SEQ	  = Y2.EVENT_SUB_SEQ
										 	    AND Y1.EVENT_PRODUCT_CODE = Y2.EVENT_PRODUCT_CODE												  	    
										  WHERE Y1.OFFICE_CODE   	  = #{officeCode}
                                            AND Y1.EVENT_PRODUCT_TYPE = 'C'
										    AND Y1.DISPLAY_YN 	      = 'Y'														 
										) Z1
									GROUP BY 
										Z1.EVENT_SEQ, Z1.EVENT_SUB_SEQ, Z1.EVENT_PRODUCT_CODE
				    ) P2
			       ON P1.OFFICE_CODE        = P2.OFFICE_CODE
			      AND P1.EVENT_SEQ          = P2.EVENT_SEQ
			      AND P1.EVENT_SUB_SEQ      = P2.EVENT_SUB_SEQ
			      AND P1.EVENT_PRODUCT_CODE = P2.EVENT_PRODUCT_CODE
			WHERE P1.OFFICE_CODE   = #{officeCode}			 
			  AND P1.PRD_SUB_CODE  = #{prdSubCode}
			  AND P1.DISPLAY_YN	   = 'Y'
			ORDER BY P1.PRD_SORT_ORDER
		]]>	
	</select>
	
	<update id="updateEventPageDisplay" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventPageDisplay
			 * Description : 시술 상세 이벤트 노출여부 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.02  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_PRODUCT_PAGE_TMP
			   SET DISPLAY_YN = #{displayYn}
			 WHERE OFFICE_CODE		  = #{officeCode}
			   AND EVENT_SEQ	 	  = #{eventSeq}
			   AND EVENT_SUB_SEQ 	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
			   AND PRD_SUB_CODE  	  = #{prdSubCode} 
		]]>		
	</update>
	
	<select	id="getProductItemList" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductItemList
			 * Description : 시술 상세 일반시술 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.15  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   PRD_ITEM_CODE 	 	 -- 일반시술코드
				 , PRD_ITEM_NAME		 -- 일반시술명
				 , CAPACITY				 -- 용량
				 , FORMAT(PRICE,0) PRICE -- 시술정상가 
				 , ANES_YN				 -- 마취여부
				 , SURGICAL_TIME		 -- 시술시간	
				 , SURGICAL_CYCLE		 -- 시술주기	
				 , SURGICAL_CYCLE_UNIT   -- 시술주기단위
				 , SURGICAL_PART		 -- 시술부위 
				 , DISPLAY_YN			 -- 노출여부
				 , SORT_ORDER		 	 -- 출력순서
			  FROM PRODUCT_SURGICAL_ITEM_TMP
			 WHERE OFFICE_CODE	 = #{officeCode}
			   AND PRD_SUB_CODE  = #{prdSubCode}		
			 ORDER BY SORT_ORDER								  
		]]>		 
	</select>
	
	<select id="getProductItemInfo" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductItemInfo
			 * Description : 시술 상세 일반시술 정보 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   PRD_ITEM_CODE		 -- 일반시술코드
				 , PRD_ITEM_NAME		 -- 일반시술명
				 , CAPACITY			 	 -- 용량
				 , FORMAT(PRICE,0) PRICE -- 시술정상가 
				 , ANES_YN				 -- 마취여부
				 , SURGICAL_TIME		 -- 시술시간
				 , SURGICAL_CYCLE		 -- 시술주기
				 , SURGICAL_CYCLE_UNIT 	 -- 시술주기단위
				 , SURGICAL_PART		 -- 시술부위				 				
		 	 FROM PRODUCT_SURGICAL_ITEM_TMP
		 	WHERE OFFICE_CODE	= #{officeCode}
			  AND PRD_ITEM_CODE = #{prdItemCode}
		]]>
	</select>
	
	<update id="deleteProductSub" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteProductSub
			 * Description : 시술 소분류 삭제(사용여부 변경)
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_SUB_TMP
			   SET USE_YN = 'N'
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_SUB_CODE  = #{prdSubCode}
		]]>
	</update>
	
	<select id="getMaxPrdSubCode" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="String">
		<![CDATA[
			/*
			 * SQL ID      : prd.getMaxPrdSubCode
			 * Description : 시술 상세 페이지 신규코드 가져오기
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT CONCAT('W', LPAD(SUBSTRING(IFNULL(MAX(PRD_SUB_CODE), 'W0000'), 2) + 1, '4', '0'))
			  FROM PRODUCT_SURGICAL_SUB_TMP A
			 WHERE OFFICE_CODE   = #{officeCode}
		]]>				  
	</select>
	
	<insert id="insertProductSurgicalSub" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertProductSurgicalSub
			 * Description : 시술 상세 페이지 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL_SUB_TMP (
				  OFFICE_CODE	
				, PRD_SUB_CODE	
				, PRD_SUB_NAME	
				, PRD_SUB_CONTENT	
				, PRD_SUB_PRICE	
				, PRD_SUB_TYPE	
				, PRD_SUB_IMAGE	
				, PRD_SUB_VIDEO	
				, PRD_CODE	
				, DISPLAY_YN	
				, SORT_ORDER
				, USE_YN
				, CREATE_USER	
				, CREATE_DATE	
			) VALUES (
				  #{officeCode}  
				, #{prdSubCode}
				, #{prdSubName}
				, #{prdSubContent}
				, IF(#{prdSubPrice} = '', 0, REPLACE(#{prdSubPrice},',',''))				
				, #{prdSubType}
				, #{prdSubImage}
				, #{prdSubVideo}	
				, #{prdCode}
				, 'Y'
				, (
					SELECT IFNULL(MAX(SORT_ORDER), 0) + 1  
				  	  FROM PRODUCT_SURGICAL_SUB_TMP A
				 	 WHERE OFFICE_CODE   = #{officeCode}
				   	   AND PRD_CODE 	 = #{prdCode}
					) 
				, 'Y'
				, #{createUser}
				, NOW()
			)
		]]>
	</insert>
	
	<update id="updateProductSurgicalSub" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProductSurgicalSub
			 * Description : 시술 상세 페이지 상단 수정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_SUB_TMP
			   SET PRD_SUB_NAME	   = #{prdSubName}
				 , PRD_SUB_CONTENT = #{prdSubContent}
				 , PRD_SUB_PRICE   = IF(#{prdSubPrice} = '', 0, REPLACE(#{prdSubPrice},',',''))
				 , PRD_SUB_TYPE	   = #{prdSubType}
				 , PRD_SUB_IMAGE   = IFNULL(#{prdSubImage}, PRD_SUB_IMAGE)
				 , PRD_SUB_VIDEO   = #{prdSubVideo}				 					 			
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_SUB_CODE  = #{prdSubCode}
		]]>
	</update>
	
	<select id="getMaxProductItemDefault" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getMaxProductItemDefault
			 * Description : 소분류 일반 시술 추가사항 기본값 가져오기
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   SURGICAL_TIME		-- 시술시간
				 , SURGICAL_CYCLE		-- 시술주기
			     , SURGICAL_CYCLE_UNIT	-- 시술주기단위
			     , SURGICAL_PART		-- 시술부위
			  FROM PRODUCT_SURGICAL_ITEM_TMP
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_SUB_CODE  = #{prdSubCode}
			 ORDER BY CREATE_DATE DESC LIMIT 1
		]]>
	</select>
	
	<insert id="insertProductSurgicalItem" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertProductSurgicalItem
			 * Description : 일반 시술 추가
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL_ITEM_TMP (
				  OFFICE_CODE
				, PRD_ITEM_CODE				
				, PRD_ITEM_NAME	
				, CAPACITY	
				, PRICE	
				, ANES_YN	
				, SURGICAL_TIME	
				, SURGICAL_CYCLE
				, SURGICAL_CYCLE_UNIT	
				, SURGICAL_PART	
				, MANUFACTURER	
				, PRD_SUB_CODE	
				, DISPLAY_YN	
				, SORT_ORDER
				, NEW_YN
				, CREATE_USER	
				, CREATE_DATE				
			) VALUES (
				  #{officeCode}
				, (
					SELECT CONCAT('M', LPAD(SUBSTRING(IFNULL(MAX(PRD_ITEM_CODE), 'M00000'), 2) + 1, '5', '0'))
				  	  FROM PRODUCT_SURGICAL_ITEM_TMP A
				 	 WHERE OFFICE_CODE   = #{officeCode}
				  )				
				, #{prdItemName}	
				, #{capacity}	
				, REPLACE(#{price}, ',', '')	
				, #{anesYn}	
				, #{surgicalTime}	
				, #{surgicalCycle}
				, #{surgicalCycleUnit}
				, #{surgicalPart}	
				, #{manufacturer}	
				, #{prdSubCode}	
				, 'Y'
				, (
					SELECT IFNULL(MAX(SORT_ORDER), 0) + 1
				  	  FROM PRODUCT_SURGICAL_ITEM_TMP A
				 	 WHERE OFFICE_CODE   = #{officeCode}
				   	   AND PRD_SUB_CODE  = #{prdSubCode}
				  )
				, 'Y'
				, #{createUser}	
				, NOW()
			)
		]]>
	</insert>

	<update id="updateProductSurgicalItemDisplay" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProductSurgicalItemDisplay
			 * Description : 일반 시술 노출 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.14  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_ITEM_TMP
			   SET DISPLAY_YN     = #{displayYn}
			 WHERE OFFICE_CODE    = #{officeCode}
		   	   AND PRD_ITEM_CODE  = #{prdItemCode}		   	   
		]]>
	</update>

	<update id="updateProductSurgicalItem" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProductSurgicalItem
			 * Description : 일반 시술 수정 
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_ITEM_TMP
			   SET PRD_ITEM_NAME  = #{prdItemName}
				 , CAPACITY	 	  = #{capacity}
				 , PRICE		  = REPLACE(#{price}, ',', '')
 				 , ANES_YN		  = #{anesYn}
				 , SURGICAL_TIME  = #{surgicalTime}
				 , SURGICAL_CYCLE = #{surgicalCycle}
				 , SURGICAL_CYCLE_UNIT = #{surgicalCycleUnit}
				 , SURGICAL_PART  = #{surgicalPart}
				 , MANUFACTURER   = #{manufacturer}
			 WHERE OFFICE_CODE    = #{officeCode}
		   	   AND PRD_ITEM_CODE  = #{prdItemCode}		   	   
		]]>
	</update>
		
	<delete id="deleteProductSurgicalItem" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteProductSurgicalItem
			 * Description : 일반 시술 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE FROM PRODUCT_SURGICAL_ITEM_TMP
			 WHERE OFFICE_CODE   = #{officeCode}
		   	   AND PRD_ITEM_CODE = #{prdItemCode}		   	   
		]]>
	</delete>
	
	<select id="getMaxDetailSeq" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="int">
		<![CDATA[
			/*
			 * SQL ID      : prd.getMaxDetailSeq
			 * Description : 시술 상세 페이지 내용 MAX SEQ 가져오기
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[			
			SELECT IFNULL(MAX(PRD_DETAIL_SEQ), 0) + 1 
			  FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_SUB_CODE  = #{prdSubCode}		  
		]]>
	</select>
	
	<insert id="insertProductSurgicalSubDt" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertProductSurgicalSubDt
			 * Description : 시술 상세 페이지 내용 추가
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.13  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL_SUB_DETAIL_TMP (
				  OFFICE_CODE	
				, PRD_SUB_CODE	
				, PRD_DETAIL_SEQ	
				, DETAIL_TYPE	
				, DETAIL_CONTENT	
				, DETAIL_CONTENT2	
				, DETAIL_IMAGE	
				, PARENT_DETAIL_SEQ	
				, SORT_ORDER								
			) VALUES (
			  	  #{officeCode}
				, #{prdSubCode}
				, #{prdDetailSeq}
				, #{detailType}
				, #{detailContent}
				, #{detailContent2}	
				, #{detailImage}
				, #{parentDetailSeq}
				, IF(#{sortOrder} = 0, 
						(SELECT IFNULL(MAX(SORT_ORDER),0) + 1 
						   FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP A
						  WHERE OFFICE_CODE   = #{officeCode}
						    AND PRD_SUB_CODE  = #{prdSubCode}
						    AND PARENT_DETAIL_SEQ = 0), #{sortOrder})						    
			)
		]]>	
	</insert>
	
	<update id="updateProductSurgicalSubDt" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateProductSurgicalSubDt
			 * Description : 시술 상세 페이지 내용 수정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.14  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_SUB_DETAIL_TMP
			   SET DETAIL_CONTENT  = #{detailContent}	
				 , DETAIL_CONTENT2 = #{detailContent2}
				 , DETAIL_IMAGE	   = #{detailImage}				  	
			 WHERE OFFICE_CODE	   = #{officeCode}
			   AND PRD_SUB_CODE	   = #{prdSubCode}
			   AND PRD_DETAIL_SEQ  = #{prdDetailSeq}
		]]>
	</update>
	
	<delete id="deleteProductSurgicalSubDt" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteProductSurgicalSubDt
			 * Description : 시술 상세 페이지 내용 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.14  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP
			 WHERE OFFICE_CODE	  = #{officeCode}
			   AND PRD_SUB_CODE	  = #{prdSubCode}
		]]>
		<choose>
			<when test="parentDetailSeq != null and parentDetailSeq != ''">
				AND PARENT_DETAIL_SEQ = #{parentDetailSeq}
			</when>	
			<otherwise>
				AND (PRD_DETAIL_SEQ = #{prdDetailSeq} OR PARENT_DETAIL_SEQ = #{prdDetailSeq})
			</otherwise>
		</choose>		
	</delete>
	
	<select id="getCallProductSubCategory" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="camelHashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.getCallProductSubCategory
			 * Description : 불러오기 - 시술 상세 타입 
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.08.04  진가영      최초 생성
		     */
		]]>
		<![CDATA[			
            SELECT 
                  DISTINCT
				  C2.COMMON_CODE AS CODE
			    , C2.COMMON_NAME AS NAME
		     FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP C1
		   		  INNER JOIN COMMON_CODE C2
                     ON C1.DETAIL_TYPE = C2.COMMON_CODE
                    AND C2.GROUP_CODE  = 'PRD001'
		    WHERE OFFICE_CODE   = #{officeCode} 
              AND PRD_SUB_CODE  = #{prdSubCode} 
		]]>
	</select>
	
	<delete id="deleteCallProductSubDt" parameterType="camelHashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteCallProductSubDt
			 * Description : 불러오기 - 시술 상세 페이지 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.08.04  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP
			 WHERE OFFICE_CODE	 = #{officeCode}
			   AND PRD_SUB_CODE  = #{prdSubCode}
		]]>
	</delete>
	
	<update id="updateCallProductSubDt" parameterType="camelHashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateCallProductSubDt
			 * Description : 불러오기 - 시술 상세 페이지 저장
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.10  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL_SUB_DETAIL_TMP
		    SELECT 
		    	   OFFICE_CODE	
		         , #{prdSubCode} AS PRD_SUB_CODE
		         , PRD_DETAIL_SEQ
		         , DETAIL_TYPE
		         , DETAIL_CONTENT
		         , DETAIL_CONTENT2
		         , DETAIL_IMAGE
		         , PARENT_DETAIL_SEQ		
		         , SORT_ORDER		 
			  FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP
			 WHERE OFFICE_CODE   = #{officeCode}
		       AND PRD_SUB_CODE  = #{popPrdSubCode}
   		]]>
  		<if test="detailType != null and detailType != ''">				
		       AND DETAIL_TYPE   = #{detailType}
		</if>	
	</update>
	
	<select id="getProductByType" parameterType="camelHashMap" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductByType
			 * Description : 불러오기 - 시술 상세 페이지 저장
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.08.08  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
		    	   OFFICE_CODE	
		         , PRD_SUB_CODE
		         , PRD_DETAIL_SEQ
		         , DETAIL_TYPE
		         , DETAIL_CONTENT
		         , DETAIL_CONTENT2
		         , DETAIL_IMAGE
		         , PARENT_DETAIL_SEQ		 
			  FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP
			 WHERE OFFICE_CODE   = #{officeCode}
		       AND PRD_SUB_CODE  = #{popPrdSubCode}   					
		       AND DETAIL_TYPE   = #{detailType}
		]]>
	</select>
	
	<select id="getEventGroupList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventGroupList
			 * Description : 이벤트 중그룹 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 				
			      EVENT_SEQ											-- 중그룹코드			    
				, EVENT_NAME										-- 중그룹명
				, RESERVE_DAY										-- 예약가능요일			    
				, DATE_FORMAT(START_DATE, '%Y-%m-%d') START_DATE	-- 예약가능시작일
				, DATE_FORMAT(END_DATE, '%Y-%m-%d') END_DATE		-- 예약가능종료일
				, START_TIME										-- 예약가능시작시간
				, END_TIME											-- 예약가능종료시간
				, DISPLAY_YN										-- 노출여부
				, SORT_ORDER										-- 출력순서
				, TRIM(REPLACE(REPLACE(
					REPLACE(REPLACE(
						REPLACE(REPLACE(REPLACE(RESERVE_DAY, 1, '월'), 2, ' 화'), 3, ' 수')
						, 4, ' 목'), 5, ' 금')
					, 6, ' 토'), 0, ' 일')) EVENT_DAY
			    , IFNULL(CONCAT(DATE_FORMAT(START_DATE, '%Y년 %m월 %d일'), ' ~ ',  DATE_FORMAT(END_DATE, '%Y년 %m월 %d일')),'-') EVENT_DATE
			    , CONCAT(CONCAT(SUBSTR(START_TIME,1,2), ':', SUBSTR(START_TIME,3))
						, ' ~ ', 
			            CONCAT(SUBSTR(END_TIME,1,2), ':', SUBSTR(END_TIME,3))) EVENT_TIME
			 FROM EVENT_GROUP_TMP
			WHERE OFFICE_CODE	= #{officeCode}
		]]>		
		<if test="eventSeq != null and eventSeq != ''">				
		  	AND EVENT_SEQ = #{eventSeq}
		</if>						
			ORDER BY SORT_ORDER
	</select>
	
	<insert id="insertEventGroup" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertEventGroup
			 * Description : 이벤트 중그룹 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO EVENT_GROUP_TMP (
				  OFFICE_CODE
				, EVENT_SEQ				
				, EVENT_NAME
				, RESERVE_DAY
				, START_DATE
				, END_DATE
				, START_TIME
				, END_TIME
				, DISPLAY_YN
				, SORT_ORDER				
				, CREATE_USER
				, CREATE_DATE
			) VALUES (
				  #{officeCode}
				, (SELECT IFNULL(MAX(EVENT_SEQ),0) + 1
				     FROM EVENT_GROUP_TMP E1
				    WHERE OFFICE_CODE	= #{officeCode})
				, #{eventName}
				, #{reserveDay}
				, REPLACE(#{startDate},'-','')
				, REPLACE(#{endDate},'-','')
				, #{startTime}
				, #{endTime}
				, #{displayYn}
				, (SELECT IFNULL(MAX(SORT_ORDER),0) + 1
				     FROM EVENT_GROUP_TMP E1
				    WHERE OFFICE_CODE	= #{officeCode})				
				, #{createUser}
				, NOW()
			)
		]]>	
	</insert>
	
	<update id="updateEventGroup" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventGroup
			 * Description : 이벤트 중그룹 수정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_GROUP_TMP
			   SET EVENT_NAME  = #{eventName}
				 , RESERVE_DAY = #{reserveDay}
				 , START_DATE  = REPLACE(#{startDate},'-','')
				 , END_DATE    = REPLACE(#{endDate},'-','')
				 , START_TIME  = #{startTime}
				 , END_TIME    = #{endTime}				 
			 WHERE OFFICE_CODE = #{officeCode}
			   AND EVENT_SEQ   = #{eventSeq}			   
		]]>	
	</update>
	
	<update id="updateEventGroupDisplay" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventGroupDisplay
			 * Description : 이벤트 중그룹 노출 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_GROUP_TMP
			   SET DISPLAY_YN = #{displayYn}
			 WHERE OFFICE_CODE = #{officeCode}
			   AND EVENT_SEQ   = #{eventSeq} 			   
		]]>
	</update>
	
	<update id="deleteEventGroup" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteEventGroup
			 * Description : 이벤트 중그룹 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE E1   
				 , E2
			     , E3
			     , E4
			     , E5
			  FROM EVENT_GROUP_TMP E1	   
				   LEFT OUTER JOIN EVENT_GROUP_SUB_TMP E2
			         ON E1.OFFICE_CODE		= E2.OFFICE_CODE
					AND E1.EVENT_SEQ		= E2.EVENT_SEQ
			       LEFT OUTER JOIN EVENT_PRODUCT_SURGICAL_TMP E3
			         ON E1.OFFICE_CODE		= E3.OFFICE_CODE
					AND E1.EVENT_SEQ		= E3.EVENT_SEQ		
				   LEFT OUTER JOIN EVENT_PRODUCT_SURGICAL_ITEM_TMP E4
					 ON E1.OFFICE_CODE	    = E4.OFFICE_CODE
					AND E1.EVENT_SEQ	  	= E4.EVENT_SEQ		 
				   LEFT OUTER JOIN EVENT_PRODUCT_PAGE_TMP E5
					 ON E1.OFFICE_CODE	    = E5.OFFICE_CODE
					AND E1.EVENT_SEQ 	  	= E5.EVENT_SEQ		 
			 WHERE E1.OFFICE_CODE = #{officeCode}
			   AND E1.EVENT_SEQ	  = #{eventSeq}			 			  
		]]>
	</update>
	
	<select id="getEventGroupSubList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventGroupSubList
			 * Description : 이벤트 소그룹 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   EVENT_SUB_SEQ
				 , EVENT_WORD
				 , EVENT_TITLE
				 , EVENT_CONTENT
				 , EVENT_TYPE
 			     , EVENT_IMAGE
				 , EVENT_VIDEO
				 , DISPLAY_YN
			  FROM EVENT_GROUP_SUB_TMP
			 WHERE OFFICE_CODE = #{officeCode}
			   AND EVENT_SEQ   = #{eventSeq}			   
			 ORDER BY SORT_ORDER
 		]]>
	</select>
	
	<insert id="insertEventGroupSub" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertEventGroupSub
			 * Description : 이벤트 소그룹 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO EVENT_GROUP_SUB_TMP (
				  OFFICE_CODE
				, EVENT_SEQ				
				, EVENT_SUB_SEQ				
				, EVENT_WORD
				, EVENT_TITLE
				, EVENT_CONTENT
				, EVENT_IMAGE
				, EVENT_VIDEO
				, DISPLAY_YN
				, SORT_ORDER
				, CREATE_USER
				, CREATE_DATE
			) VALUES (
				  #{officeCode}
				, #{eventSeq}				
				, IF(#{eventSubSeq} = 'N', (SELECT IFNULL(MAX(EVENT_SUB_SEQ),0) + 1
										       FROM EVENT_GROUP_SUB_TMP G1
										      WHERE OFFICE_CODE   = #{officeCode}
										        AND EVENT_SEQ	  = #{eventSeq}), #{eventSubSeq})
				, #{eventWord}
				, #{eventTitle}
				, #{eventContent}
				, #{eventImage}
				, #{eventVideo}
				, 'Y'
				, (SELECT IFNULL(MAX(SORT_ORDER),0) + 1
			         FROM EVENT_GROUP_SUB_TMP G1
			        WHERE OFFICE_CODE   = #{officeCode}
			          AND EVENT_SEQ	    = #{eventSeq})
				, #{createUser}
				, NOW()   	  
			)
			ON DUPLICATE KEY
			UPDATE EVENT_WORD    = #{eventWord}
				 , EVENT_TITLE   = #{eventTitle}
				 , EVENT_CONTENT = #{eventContent}
		]]>
	</insert>
	
	<update id="updateEventGroupSub" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventGroupSub
			 * Description : 이벤트 소그룹 영상/이미지 저장
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_GROUP_SUB_TMP
			   SET EVENT_TYPE	 = #{eventType}
   				 , EVENT_IMAGE   = #{eventImage}
				 , EVENT_VIDEO	 = #{eventVideo}
			 WHERE OFFICE_CODE   	= #{officeCode}
			   AND EVENT_SEQ	 	= #{eventSeq}
			   AND EVENT_SUB_SEQ 	= #{eventSubSeq}
		]]>
	</update>
	
	<update id="updateEventGroupSubDisplay" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventGroupSubDisplay
			 * Description : 이벤트 소그룹 노출 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_GROUP_SUB_TMP
			   SET DISPLAY_YN = #{displayYn}
			 WHERE OFFICE_CODE  	= #{officeCode}
			   AND EVENT_SEQ	 	= #{eventSeq}
			   AND EVENT_SUB_SEQ 	= #{eventSubSeq}  
		]]>
	</update>
	
	<delete id="deleteEventGroupSub" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteEventGroupSub
			 * Description : 이벤트 소그룹 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE E1 
   				 , E2
   				 , E3
   				 , E4
			  FROM EVENT_GROUP_SUB_TMP E1
			       LEFT OUTER JOIN EVENT_PRODUCT_SURGICAL_TMP E2
			         ON E1.OFFICE_CODE		= E2.OFFICE_CODE
					AND E1.EVENT_SEQ		= E2.EVENT_SEQ
					AND E1.EVENT_SUB_SEQ	= E2.EVENT_SUB_SEQ
				   LEFT OUTER JOIN EVENT_PRODUCT_SURGICAL_ITEM_TMP E3
					 ON E1.OFFICE_CODE	    = E3.OFFICE_CODE
					AND E1.EVENT_SEQ	  	= E3.EVENT_SEQ
					AND E1.EVENT_SUB_SEQ	= E3.EVENT_SUB_SEQ		 
				   LEFT OUTER JOIN EVENT_PRODUCT_PAGE_TMP E4
					 ON E1.OFFICE_CODE	    = E4.OFFICE_CODE
					AND E1.EVENT_SEQ	  	= E4.EVENT_SEQ
					AND E1.EVENT_SUB_SEQ	= E4.EVENT_SUB_SEQ		 
			 WHERE E1.OFFICE_CODE   	 = #{officeCode}
			   AND E1.EVENT_SEQ	  	     = #{eventSeq}
			   AND E1.EVENT_SUB_SEQ	     = #{eventSubSeq}			   
		]]>
	</delete>
	
	<select id="getEventProductList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventProductList
			 * Description : 이벤트 시술 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.19  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT   
				   Z1.EVENT_SEQ							-- 중그룹코드
				 , Z1.EVENT_SUB_SEQ						-- 소그룹코드
				 , Z1.EVENT_PRODUCT_CODE				-- 이벤트시술코드
				 , Z1.EVENT_PRODUCT_TYPE				-- 이벤트시술타입
				 , Z1.EVENT_PRODUCT_WORD				-- 이벤트시술강조문구
				 , Z1.EVENT_PRODUCT_TITLE				-- 이벤트시술제목
				 , Z1.EVENT_PRODUCT_CONTENT				-- 이벤트시술내용
				 , Z1.EVENT_SALE						-- 이벤트시술할인가
				 , Z1.EVENT_PRICE						-- 이벤트시술정상가
				 , Z1.DISPLAY_YN						-- 노출여부
				 , Z1.SORT_ORDER						-- 출력순서
				 , Z2.PRD_SUB_CODE					    -- 상세페이지노출(소분류코드)
	 			 , Z2.PRD_CODE							-- 상세페이지노출(중분류코드)
				 , IF(Z1.EVENT_PRODUCT_TYPE = 'C', GROUP_CONCAT(Z1.PRD_ITEM_NAME SEPARATOR '\n'), Z1.PRD_ITEM_NAME) AS PRD_ITEM_NAME
				 , Z3.PRD_MST_NAME                 
			  FROM (
				    SELECT 
						   Y1.EVENT_SEQ	
					     , Y1.EVENT_SUB_SEQ	
					     , Y1.EVENT_PRODUCT_CODE	
					     , Y1.EVENT_PRODUCT_TYPE	
					     , Y1.EVENT_PRODUCT_WORD	
					     , Y1.EVENT_PRODUCT_TITLE		
					     , Y1.EVENT_PRODUCT_CONTENT			
					     , FORMAT(Y1.EVENT_SALE,0) EVENT_SALE	
					     , FORMAT(Y1.EVENT_PRICE,0) EVENT_PRICE
					     , Y1.DISPLAY_YN
					     , Y1.SORT_ORDER						     
					     , CASE WHEN Y1.EVENT_PRODUCT_TYPE = 'P' THEN IF(Y1.PACKAGE_DISPLAY_YN = 'Y', Y1.PACKAGE_CONTENT, '')					            
					            ELSE ''
						    END PRD_ITEM_NAME					     
					 FROM EVENT_PRODUCT_SURGICAL_TMP Y1						   					      
					WHERE Y1.OFFICE_CODE   	    = #{officeCode}			  	  				 
					  AND Y1.EVENT_SEQ	   	    = #{eventSeq}
					  AND Y1.EVENT_SUB_SEQ 	    = #{eventSubSeq}
                      AND Y1.EVENT_PRODUCT_TYPE <> 'C'
				    UNION ALL              
					SELECT 
						   Y1.EVENT_SEQ	
					     , Y1.EVENT_SUB_SEQ	
					     , Y1.EVENT_PRODUCT_CODE	
					     , Y1.EVENT_PRODUCT_TYPE	
					     , Y1.EVENT_PRODUCT_WORD	
					     , Y1.EVENT_PRODUCT_TITLE		
					     , Y1.EVENT_PRODUCT_CONTENT			
					     , FORMAT(Y1.EVENT_SALE,0) EVENT_SALE	
					     , FORMAT(Y1.EVENT_PRICE,0) EVENT_PRICE
					     , Y1.DISPLAY_YN
					     , Y1.SORT_ORDER						     
					     , CONCAT(X3.REMARK, ' Point 차감) ', REPLACE(X3.PRD_ITEM_NAME,'\n',',')) AS PRD_ITEM_NAME					     
					  FROM EVENT_PRODUCT_SURGICAL_TMP Y1
						   LEFT OUTER JOIN (
											SELECT 
												   X1.OFFICE_CODE
												 , X1.EVENT_SEQ
												 , X1.EVENT_SUB_SEQ
												 , X1.EVENT_PRODUCT_CODE
												 , X1.EVENT_DETAIL_SEQ
					                             , X1.REMARK
												 , GROUP_CONCAT(X2.PRD_ITEM_NAME ORDER BY X1.SORT_ORDER SEPARATOR '\n') AS PRD_ITEM_NAME
											  FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP X1													 
												   INNER JOIN (
															SELECT 
																   OFFICE_CODE
																 , PRD_ITEM_CODE
																 , PRD_ITEM_NAME
															  FROM PRODUCT_SURGICAL_ITEM_TMP
															 WHERE OFFICE_CODE   = #{officeCode}												   
													) X2
												   ON X1.OFFICE_CODE   = X2.OFFICE_CODE
												  AND X1.PRD_ITEM_CODE = X2.PRD_ITEM_CODE
											WHERE X1.OFFICE_CODE   = #{officeCode}								  
											  AND X1.EVENT_SEQ     = #{eventSeq}							  
					                        GROUP BY 
												X1.EVENT_SEQ, X1.EVENT_SUB_SEQ, X1.EVENT_PRODUCT_CODE, X1.EVENT_DETAIL_SEQ
										) X3 
								ON Y1.OFFICE_CODE        = X3.OFFICE_CODE
					           AND Y1.EVENT_SEQ          = X3.EVENT_SEQ
					           AND Y1.EVENT_SUB_SEQ      = X3.EVENT_SUB_SEQ
					           AND Y1.EVENT_PRODUCT_CODE = X3.EVENT_PRODUCT_CODE					     
					WHERE Y1.OFFICE_CODE   	    = #{officeCode}			  	  				 
					  AND Y1.EVENT_SEQ	   	    = #{eventSeq}
					  AND Y1.EVENT_SUB_SEQ 	    = #{eventSubSeq}
                      AND Y1.EVENT_PRODUCT_TYPE = 'C'
					) Z1 LEFT OUTER JOIN (
										  SELECT
											     P1.EVENT_SEQ
											   , P1.EVENT_SUB_SEQ
											   , P1.EVENT_PRODUCT_CODE
											   , P1.PRD_SUB_CODE
											   , P2.PRD_CODE
										    FROM EVENT_PRODUCT_PAGE_TMP P1
											     INNER JOIN PRODUCT_SURGICAL_SUB_TMP P2
												    ON P1.OFFICE_CODE	= P2.OFFICE_CODE
												   AND P1.PRD_SUB_CODE  = P2.PRD_SUB_CODE
										   WHERE P1.OFFICE_CODE   = #{officeCode}
										     AND P1.SAVE_ORDER    = 1
										   GROUP BY 
										   	  P1.EVENT_SEQ, P1.EVENT_SUB_SEQ, P1.EVENT_PRODUCT_CODE
					 ) Z2
					   ON Z1.EVENT_SEQ 		    = Z2.EVENT_SEQ
					  AND Z1.EVENT_SUB_SEQ      = Z2.EVENT_SUB_SEQ
					  AND Z1.EVENT_PRODUCT_CODE = Z2.EVENT_PRODUCT_CODE
					 LEFT OUTER JOIN (
										SELECT E1.EVENT_PRODUCT_CODE
											 , GROUP_CONCAT(DISTINCT P4.PRD_MST_NAME separator ', ') AS PRD_MST_NAME
										  FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP E1
											   INNER JOIN PRODUCT_SURGICAL_ITEM_TMP P1
												  ON E1.OFFICE_CODE   = P1.OFFICE_CODE
												 AND E1.PRD_ITEM_CODE = P1.PRD_ITEM_CODE
											   INNER JOIN PRODUCT_SURGICAL_SUB_TMP P2
												  ON P1.OFFICE_CODE   = P2.OFFICE_CODE
												 AND P1.PRD_SUB_CODE  = P2.PRD_SUB_CODE
											   INNER JOIN PRODUCT_SURGICAL_TMP P3
												  ON P2.OFFICE_CODE   = P3.OFFICE_CODE
												 AND P2.PRD_CODE 	  = P3.PRD_CODE
											   INNER JOIN PRODUCT_SURGICAL_MASTER P4
												  ON P3.OFFICE_CODE   = P4.OFFICE_CODE
												 AND P3.PRD_MST_CODE  = P4.PRD_MST_CODE	
										 WHERE E1.OFFICE_CODE   	  = #{officeCode}
										   AND E1.EVENT_SEQ     	  = #{eventSeq}
										   AND E1.EVENT_SUB_SEQ 	  = #{eventSubSeq}
										   -- 예약 상품의 이벤트 시술은 패키지, 횟수차감을 고려해 첫번째 시술로 계산하기 때문에 1로 고정		
										   AND E1.EVENT_DETAIL_SEQ    = 1
										 GROUP BY E1.EVENT_PRODUCT_CODE
                     ) Z3
					   ON Z1.EVENT_PRODUCT_CODE = Z3.EVENT_PRODUCT_CODE
			 GROUP BY 
				Z1.EVENT_SEQ, Z1.EVENT_SUB_SEQ, Z1.EVENT_PRODUCT_CODE
			 ORDER BY Z1.SORT_ORDER
		]]>
	</select>
	
	<select id="getEventGroupSubInfo" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventGroupSubInfo
			 * Description : 이벤트 시술 내용 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.19  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   EVENT_PRODUCT_TYPE	 -- 이벤트타입
				 , EVENT_PRODUCT_WORD	 -- 이벤트강조문구
			     , EVENT_PRODUCT_TITLE	 -- 이벤트시술
			     , EVENT_PRODUCT_CONTENT -- 이벤트시술설명
			     , EVENT_CNT			     -- 패키지,횟수 차감사용
			     , EVENT_SALE			 -- 이벤트할인가
			     , EVENT_PRICE			 -- 이벤트정상가     
			     , PACKAGE_CONTENT
			     , PACKAGE_DISPLAY_YN 
			  FROM EVENT_PRODUCT_SURGICAL_TMP			       
			 WHERE OFFICE_CODE    	  = #{officeCode}
			   AND EVENT_SEQ 	          = #{eventSeq}
			   AND EVENT_SUB_SEQ    = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
		]]>		
	</select>
	
	<select id="getEventPageList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="camelHashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventPageList
			 * Description : 이벤트 시술 노출 상세 페이지 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT
				   EPP.PRD_SUB_CODE
				 , EPP.DISPLAY_YN       
				 , PSS.PRD_SUB_NAME
			  FROM EVENT_PRODUCT_PAGE_TMP EPP
				   INNER JOIN PRODUCT_SURGICAL_SUB_TMP PSS
					  ON EPP.OFFICE_CODE = PSS.OFFICE_CODE
					 AND EPP.PRD_SUB_CODE = PSS.PRD_SUB_CODE
			 WHERE EPP.OFFICE_CODE    	  = #{officeCode}
			   AND EPP.EVENT_SEQ 	      = #{eventSeq}
			   AND EPP.EVENT_SUB_SEQ      = #{eventSubSeq}
			   AND EPP.EVENT_PRODUCT_CODE = #{eventProductCode}
			 ORDER BY EPP.SAVE_ORDER 
		]]>
	</select>
	
	<select id="getEventProductItemList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventProductItemList
			 * Description : 이벤트 시술 시술구성 상품 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.19  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   X1.EVENT_DETAIL_SEQ
				 , X1.REMARK												  						  -- 횟수
				 , GROUP_CONCAT(X1.PRD_ITEM_CODE ORDER BY X1.SORT_ORDER SEPARATOR '\n') PRD_ITEM_CODE -- 일반시술코드
			     , GROUP_CONCAT(X2.PRD_ITEM_NAME ORDER BY X1.SORT_ORDER SEPARATOR '\n') PRD_ITEM_NAME -- 일반시술명 
			     , GROUP_CONCAT(X2.PRICE ORDER BY X1.SORT_ORDER SEPARATOR '\n') PRICE 			  	  -- 가격	
			     , GROUP_CONCAT(X2.PRD_SUB_CODE ORDER BY X1.SORT_ORDER SEPARATOR '\n') PRD_SUB_CODE   -- 소분류코드
			     , GROUP_CONCAT(X2.PRD_SUB_NAME ORDER BY X1.SORT_ORDER SEPARATOR '\n') PRD_SUB_NAME	  -- 소분류명	 
			  FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP X1
				   INNER JOIN (
								SELECT 
									   A.OFFICE_CODE
									 , A.PRD_SUB_CODE
									 , A.PRD_ITEM_CODE
									 , A.PRD_ITEM_NAME 
									 , A.PRICE
									 , B.PRD_SUB_NAME									 
								  FROM PRODUCT_SURGICAL_ITEM_TMP A
								  	   INNER JOIN PRODUCT_SURGICAL_SUB_TMP B
							             ON A.OFFICE_CODE   = B.OFFICE_CODE
							            AND A.PRD_SUB_CODE  = B.PRD_SUB_CODE
								 WHERE A.OFFICE_CODE   = #{officeCode}
							  ) X2
				   ON X1.OFFICE_CODE   = X2.OFFICE_CODE
				  AND X1.PRD_ITEM_CODE = X2.PRD_ITEM_CODE
			WHERE X1.OFFICE_CODE   	    = #{officeCode}
			  AND X1.EVENT_SEQ 	   	    = #{eventSeq}
			  AND X1.EVENT_SUB_SEQ 		= #{eventSubSeq}
			  AND X1.EVENT_PRODUCT_CODE = #{eventProductCode}
			GROUP BY
				X1.EVENT_DETAIL_SEQ  
		]]>
	</select>
	
	<select id="getAllProductItemList" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getAllProductItemList
			 * Description : 일반 시술 전체 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.19  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   PSS.PRD_CODE				 -- 중분류코드
				 , PSS.PRD_SUB_CODE			 -- 소분류코드
			     , PSS.PRD_SUB_NAME			 -- 소분류명
			     , PSI.UPDATE_SEQ	 		 -- 업데이트코드
			     , PSI.PRD_ITEM_CODE 		 -- 일반시술코드
			     , PSI.PRD_ITEM_NAME 		 -- 일반시술명			     
			     , FORMAT(PSI.PRICE,0) PRICE -- 가격
			  FROM PRODUCT_SURGICAL_SUB_TMP PSS
			       LEFT OUTER JOIN (
			       					SELECT 
										   OFFICE_CODE
										 , PRD_SUB_CODE
										 , PRD_ITEM_CODE
										 , PRD_ITEM_NAME 
									  FROM PRODUCT_SURGICAL_ITEM_TMP
									 WHERE OFFICE_CODE   = #{officeCode}									   
			       					) PSI
			         ON PSS.OFFICE_CODE	  = PSI.OFFICE_CODE
			        AND PSS.PRD_SUB_CODE  = PSI.PRD_SUB_CODE
			 WHERE PSS.OFFICE_CODE   = #{officeCode}
			   AND PSI.DISPLAY_YN    = 'Y'
		]]>
		<if test="prdCode != null and prdCode != ''">		     
			AND PSS.PRD_CODE = #{prdCode}			  
		</if>			
		<if test="prdSubCode != null and prdSubCode != ''">		     
			AND PSS.PRD_SUB_CODE = #{prdSubCode}			  
		</if>
		<if test="prdItemName != null and prdItemName != ''">		     
			AND PSS.PRD_ITEM_NAME LIKE TRIM(CONCAT('%',#{prdItemName},'%')
		</if>
	</select>
	
	<select id="getMaxEventProductCode" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="String">
		 <![CDATA[
			/*
			 * SQL ID      : prd.getMaxEventProductCode
			 * Description : 이벤트 시술 최대값 가져오기
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT CONCAT('E', LPAD(SUBSTRING(IFNULL(MAX(EVENT_PRODUCT_CODE),'E0000'), 2) + 1, '4', '0'))
			  FROM EVENT_PRODUCT_SURGICAL_TMP
			 WHERE OFFICE_CODE		= #{officeCode}
			   AND EVENT_SEQ	 	= #{eventSeq}
			   AND EVENT_SUB_SEQ 	= #{eventSubSeq}
		]]>	
	</select>
	
	<update id="updateEventProductSurgical" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		 <![CDATA[
			/*
			 * SQL ID      : prd.updateEventProductSurgical
			 * Description : 이벤트 시술 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO EVENT_PRODUCT_SURGICAL_TMP (
				  OFFICE_CODE
				, EVENT_SEQ					
				, EVENT_SUB_SEQ	
				, EVENT_PRODUCT_CODE	
				, EVENT_PRODUCT_TYPE	
				, EVENT_PRODUCT_WORD	
				, EVENT_PRODUCT_TITLE	
				, EVENT_PRODUCT_CONTENT	
				, EVENT_CNT	
				, EVENT_SALE	
				, EVENT_PRICE	
				, PACKAGE_CONTENT
				, PACKAGE_DISPLAY_YN 
				, SORT_ORDER				
				, CREATE_USER	
				, CREATE_DATE					
			) VALUES (
			  	  #{officeCode}
				, #{eventSeq}				
				, #{eventSubSeq}
				, #{eventProductCode}	
				, #{eventProductType}	
				, #{eventProductWord}	
				, #{eventProductTitle}	
				, #{eventProductContent}	
				, IF(#{eventCnt} = '', 0, #{eventCnt})
				, REPLACE(#{eventSale},',','')
				, REPLACE(#{eventPrice},',','')	
				, #{packageContent}
				, #{packageDisplayYn}
				, (SELECT IFNULL(MAX(SORT_ORDER),0) + 1
					 FROM EVENT_PRODUCT_SURGICAL_TMP A
					WHERE OFFICE_CODE   = #{officeCode}
					  AND EVENT_SEQ     = #{eventSeq}
					  AND EVENT_SUB_SEQ = #{eventSubSeq})
				, #{createUser}	
				, NOW()			
			)
			ON DUPLICATE KEY
			UPDATE EVENT_PRODUCT_TYPE    = #{eventProductType}	
				 , EVENT_PRODUCT_WORD    = #{eventProductWord}
				 , EVENT_PRODUCT_TITLE	 = #{eventProductTitle}
				 , EVENT_PRODUCT_CONTENT = #{eventProductContent}
				 , EVENT_CNT			 = IF(#{eventCnt} = '', 0, #{eventCnt})
				 , EVENT_SALE			 = REPLACE(#{eventSale},',','')
				 , EVENT_PRICE			 = REPLACE(#{eventPrice},',','')
				 , PACKAGE_CONTENT	     = #{packageContent}
				 , PACKAGE_DISPLAY_YN	 = #{packageDisplayYn}				 
		]]>
	</update>	
	
	<update id="updateEventProductSurgicalDisplay" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventProductSurgicalDisplay
			 * Description : 이벤트 시술 노출 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.27  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_PRODUCT_SURGICAL_TMP
			   SET DISPLAY_YN = #{displayYn}
			 WHERE OFFICE_CODE   	  = #{officeCode}	
			   AND EVENT_SEQ	  	  = #{eventSeq}
			   AND EVENT_SUB_SEQ	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
		]]>
	</update>
	
	<delete id="deleteEventProductSurgical" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteEventProductSurgical
			 * Description : 이벤트 시술 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.27  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE E1 
				 , E2
			     , E3
			  FROM EVENT_PRODUCT_SURGICAL_TMP E1			 			  
				   LEFT OUTER JOIN EVENT_PRODUCT_SURGICAL_ITEM_TMP E2
			          ON E1.OFFICE_CODE	       = E2.OFFICE_CODE
					 AND E1.EVENT_SEQ	  	   = E2.EVENT_SEQ
					 AND E1.EVENT_SUB_SEQ	   = E2.EVENT_SUB_SEQ
					 AND E1.EVENT_PRODUCT_CODE = E2.EVENT_PRODUCT_CODE
				   LEFT OUTER JOIN EVENT_PRODUCT_PAGE_TMP E3
					  ON E1.OFFICE_CODE	       = E3.OFFICE_CODE
					 AND E1.EVENT_SEQ	  	   = E3.EVENT_SEQ
					 AND E1.EVENT_SUB_SEQ	   = E3.EVENT_SUB_SEQ
					 AND E1.EVENT_PRODUCT_CODE = E3.EVENT_PRODUCT_CODE 
			 WHERE E1.OFFICE_CODE   	 = #{officeCode}
			   AND E1.EVENT_SEQ	  	     = #{eventSeq}
			   AND E1.EVENT_SUB_SEQ	     = #{eventSubSeq}
			   AND E1.EVENT_PRODUCT_CODE = #{eventProductCode}			   		
		]]>
	</delete>
	
	<select id="getEventProductPageList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="String">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventProductPageList
			 * Description : 이벤트 상세 페이지 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.08.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT PRD_SUB_CODE
			  FROM EVENT_PRODUCT_PAGE_TMP
			 WHERE OFFICE_CODE		  = #{officeCode}
			   AND EVENT_SEQ	      = #{eventSeq}
			   AND EVENT_SUB_SEQ	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
		]]>
	</select>
	
	<insert id="updateEventProductPage" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventProductPage
			 * Description : 이벤트 상세 노출 페이지 설정 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.19  이승현      최초 생성
			 * 2022.08.18  이승현      상세페이지의 이벤트 시술 순서 유지를 위해 merge로 변경
		     */
		]]>
		<![CDATA[
			INSERT INTO EVENT_PRODUCT_PAGE_TMP (
				  OFFICE_CODE
				, EVENT_SEQ	
				, EVENT_SUB_SEQ	
				, EVENT_PRODUCT_CODE	
				, PRD_SUB_CODE
				, DISPLAY_YN
				, SAVE_ORDER
				, PRD_SORT_ORDER
			) VALUES (
			 	  #{officeCode}
				, #{eventSeq}	
				, #{eventSubSeq}	
				, #{eventProductCode}	
				, #{prdSubCode}
				, #{displayYn}
				, #{saveOrder}		
				, (SELECT IFNULL(MAX(PRD_SORT_ORDER), 0) + 1
				     FROM EVENT_PRODUCT_PAGE_TMP A
				    WHERE OFFICE_CODE   = #{officeCode}
				      AND PRD_SUB_CODE  = #{prdSubCode}
				      AND DISPLAY_YN    = 'Y')				        
			)
			ON DUPLICATE KEY
			UPDATE DISPLAY_YN = #{displayYn}
			     , SAVE_ORDER = #{saveOrder}
		]]>
	</insert>
	
	<delete id="deleteEventProductPage" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteEventProductPage
			 * Description : 이벤트 상세 노출 페이지 설정 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.19  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE FROM EVENT_PRODUCT_PAGE_TMP
			 WHERE OFFICE_CODE   	  = #{officeCode}
			   AND EVENT_SEQ	 	  = #{eventSeq}
			   AND EVENT_SUB_SEQ 	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
			   AND PRD_SUB_CODE       = #{prdSubCode}
		]]>
	</delete>

	<insert id="insertEventProductSurgicalItem" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertEventProductSurgicalItem
			 * Description : 이벤트 시술 시술구성 상품 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO EVENT_PRODUCT_SURGICAL_ITEM_TMP (
				  OFFICE_CODE
				, EVENT_SEQ	
				, EVENT_SUB_SEQ	
				, EVENT_PRODUCT_CODE	
				, EVENT_DETAIL_SEQ	
				, PRD_ITEM_SEQ
				, PRD_ITEM_CODE	
				, REMARK
				, SORT_ORDER
			) VALUES (
				  #{officeCode}
				, #{eventSeq}	
				, #{eventSubSeq}	
				, #{eventProductCode}	
				, #{eventDetailSeq}	
				, #{prdItemSeq}
				, #{prdItemCode}
				, #{remark}
				, #{sortOrder}
			)			
		]]>
	</insert>
	
	<delete id="deleteEventProductSurgicalItem" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteEventProductSurgicalItem
			 * Description : 이벤트 시술 시술구성 상품 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			DELETE FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP
			 WHERE OFFICE_CODE	   	  = #{officeCode}
			   AND EVENT_SEQ	      = #{eventSeq}
			   AND EVENT_SUB_SEQ	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
		]]>
	</delete>
	
	<select id="getUpdateProductItemList" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">	
	    <![CDATA[
			/*
			 * SQL ID      : prd.getUpdateProductItemList
			 * Description : 전체 시술 확인 일반 시술 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.08  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    SELECT
				   PS.OFFICE_CODE
				 , PS.PRD_MST_CODE		     -- 대분류시술코드
			     , PS.PRD_CODE		 		 -- 중분류시술코드
			     , PS.PRD_NAME     	 		 -- 중분류시술명
				 , PSS.PRD_SUB_CODE	 		 -- 소분류시술코드
			     , PSS.PRD_SUB_NAME  		 -- 소분류시술명
				 , PSS.PRD_ITEM_CODE 	     -- 일반시술코드 
				 , PSS.PRD_ITEM_NAME 		 -- 일반시술명	
				 , PSS.CAPACITY		 		 -- 용량
				 , PSS.PRICE  				 -- 가격				
				 , IF(IFNULL(PSS.DISPLAY_YN,'N') = 'N', '미노출', '노출') DISPLAY_YN -- 노출여부
				 , IF(LEAD(PSS.PRD_SUB_CODE) OVER (ORDER BY PS.SORT_ORDER, 
				 											PSS.SORT_ORDER, 
				 											PSS.ITEM_SORT_ORDER) = PSS.PRD_SUB_CODE,
						'N', 'Y') LAST_INDEX -- 소분류시술마지막유무
				 , PSS.NEW_YN				 -- 신규여부
			  FROM PRODUCT_SURGICAL_TMP PS
				   INNER JOIN (
								SELECT 
									   PSS.OFFICE_CODE
									 , PSS.PRD_SUB_CODE
									 , PSS.PRD_SUB_NAME
									 , PSS.PRD_CODE
									 , PSS.DISPLAY_YN
									 , PSI.PRD_ITEM_CODE
									 , PSI.PRD_ITEM_NAME
									 , PSI.CAPACITY
									 , PSI.PRICE
									 , PSS.SORT_ORDER
                                     , PSI.SORT_ORDER AS ITEM_SORT_ORDER
                                     , PSI.NEW_YN
								  FROM PRODUCT_SURGICAL_SUB_TMP PSS
									   INNER JOIN (
												   SELECT  
												   		  OFFICE_CODE
													    , PRD_ITEM_CODE					 
														, PRD_ITEM_NAME
														, CAPACITY
														, PRICE
														, PRD_SUB_CODE
							                            , SORT_ORDER
							                            , NEW_YN
													 FROM PRODUCT_SURGICAL_ITEM_TMP	    
													WHERE OFFICE_CODE   = #{officeCode}													  
									  ) PSI
										 ON PSS.OFFICE_CODE   = PSI.OFFICE_CODE
										AND PSS.PRD_SUB_CODE  = PSI.PRD_SUB_CODE
										AND PSS.USE_YN = 'Y'
				   ) PSS
					 ON PS.OFFICE_CODE   = PSS.OFFICE_CODE         
					AND PS.PRD_CODE      = PSS.PRD_CODE	   
			  WHERE PS.OFFICE_CODE   = #{officeCode}		
		]]>
		<if test="prdMstCode != null and prdMstCode != ''">
			    AND PS.PRD_MST_CODE  = #{prdMstCode}
		</if>
		<if test="prdCode != null and prdCode != ''">
			    AND PS.PRD_CODE      = #{prdCode}
		</if>
		<if test="prdSubCode != null and prdSubCode != ''">
			    AND PSS.PRD_SUB_CODE = #{prdSubCode}
		</if>
		<if test="prdItemName != null and prdItemName != ''">			    			    
			    AND PSS.PRD_ITEM_NAME LIKE TRIM(CONCAT('%',#{prdItemName},'%'))
		</if>
			ORDER BY 
				PS.SORT_ORDER, PSS.SORT_ORDER, PSS.ITEM_SORT_ORDER
	</select>		
	
	<select id="getUpdateEventItemList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getUpdateEventItemList
			 * Description : 전체 시술 확인 이벤트 시술 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[		
			SELECT 
				   X1.EVENT_SEQ				-- 중그룹코드
				 , X1.EVENT_NAME			-- 중그룹명
			     , X2.EVENT_SUB_SEQ			-- 소그룹코드
			     , X2.EVENT_TITLE			-- 소그룹제목
			     , X3.DISPLAY_YN			-- 이벤트시술노출여부
                 , X3.EVENT_PRODUCT_CODE	-- 이벤트시술코드
			     , X3.EVENT_PRODUCT_TITLE	-- 이벤트시술제목
			     , X3.EVENT_SALE			-- 이벤트시술할인가
			     , X3.EVENT_PRICE			-- 이벤트시술정상가
			     , X3.PRD_SUB_NAME			-- 자세히연결(소분류명)
			     , X3.SORT_ORDER			-- 이벤트시술순서
			     , X3.NEW_YN				-- 신규여부
			     , IF(LEAD(X1.EVENT_SEQ) OVER (ORDER BY X1.SORT_ORDER, 
				 										X3.SORT_ORDER) = X1.EVENT_SEQ,
					   'N', 'Y') LAST_INDEX -- 마지막유무
			  FROM EVENT_GROUP_TMP X1
				   INNER JOIN EVENT_GROUP_SUB_TMP X2
			         ON X1.OFFICE_CODE	 = X2.OFFICE_CODE
			        AND X1.EVENT_SEQ	 = X2.EVENT_SEQ
			       INNER JOIN (
								SELECT 
								 	   EP.OFFICE_CODE
									 , EP.EVENT_SEQ
									 , EP.EVENT_SUB_SEQ
									 , EP.EVENT_PRODUCT_CODE
									 , EP.EVENT_PRODUCT_TITLE
									 , EP.EVENT_SALE
									 , EP.EVENT_PRICE
									 , EP.DISPLAY_YN
									 , EP.SORT_ORDER
									 , EP.NEW_YN
									 , EPP.PRD_SUB_CODE
									 , (SELECT PRD_SUB_NAME
									      FROM PRODUCT_SURGICAL_SUB_TMP 
									     WHERE OFFICE_CODE	 = EP.OFFICE_CODE
										   AND PRD_SUB_CODE  = EPP.PRD_SUB_CODE) PRD_SUB_NAME
								  FROM EVENT_PRODUCT_SURGICAL_TMP EP
									   LEFT OUTER JOIN (
									   					SELECT
															   EPP.OFFICE_CODE
															 , EPP.EVENT_SEQ
															 , EPP.EVENT_SUB_SEQ
															 , EPP.EVENT_PRODUCT_CODE	 
															 , EPP.PRD_SUB_CODE
															 , EPP.DISPLAY_YN       
															 , PSS.PRD_SUB_NAME
															 , EPP.SAVE_ORDER
														  FROM EVENT_PRODUCT_PAGE_TMP EPP
															   LEFT OUTER JOIN PRODUCT_SURGICAL_SUB_TMP PSS
																 ON EPP.OFFICE_CODE  = PSS.OFFICE_CODE
																AND EPP.PRD_SUB_CODE = PSS.PRD_SUB_CODE
														 WHERE EPP.OFFICE_CODE    	 = #{officeCode}
														   AND (EPP.EVENT_SEQ, 
																EPP.EVENT_SUB_SEQ,
																EPP.EVENT_PRODUCT_CODE,
																EPP.SAVE_ORDER) IN (
																					SELECT 
																						   A.EVENT_SEQ
																						 , A.EVENT_SUB_SEQ
																						 , A.EVENT_PRODUCT_CODE
																						 , MIN(A.SAVE_ORDER) AS SAVE_ORDER
																					  FROM EVENT_PRODUCT_PAGE_TMP A
																					 WHERE A.OFFICE_CODE   = #{officeCode}
																					   AND A.DISPLAY_YN    = 'Y'
																					 GROUP BY 
																						A.EVENT_SEQ, A.EVENT_SUB_SEQ, A.EVENT_PRODUCT_CODE
																)															
									   ) EPP
									   ON EP.OFFICE_CODE   	    = EPP.OFFICE_CODE
									  AND EP.EVENT_SEQ	   	    = EPP.EVENT_SEQ
									  AND EP.EVENT_SUB_SEQ 	    = EPP.EVENT_SUB_SEQ
									  AND EP.EVENT_PRODUCT_CODE = EPP.EVENT_PRODUCT_CODE
								WHERE EP.OFFICE_CODE   = #{officeCode}
							) X3
						 ON X2.OFFICE_CODE	 = X3.OFFICE_CODE
			            AND X2.EVENT_SEQ     = X3.EVENT_SEQ
			            AND X2.EVENT_SUB_SEQ = X3.EVENT_SUB_SEQ
			WHERE X1.OFFICE_CODE   = #{officeCode}
		]]>
		<if test="eventSeq != null and eventSeq != ''">
			  AND X1.EVENT_SEQ     = #{eventSeq}
		</if>
		<if test="eventSubSeq != null and eventSubSeq != ''">
			  AND X2.EVENT_SUB_SEQ = #{eventSubSeq}
		</if>
		<if test="eventProductTitle != null and eventProductTitle != ''">			    
			  AND X3.EVENT_PRODUCT_TITLE LIKE TRIM(CONCAT('%',#{eventProductTitle},'%'))
		</if>
			ORDER BY 
				 X1.SORT_ORDER, X2.EVENT_SUB_SEQ, X3.SORT_ORDER		
	</select>
	
	<update id="updateConfirmProductItem" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateConfirmProductItem
			 * Description : 전체 시술 확인 일반 시술 데이터 확정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.20  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_ITEM_TMP 
			   SET PRD_ITEM_NAME = #{prdItemName}
				 , CAPACITY  	 = #{capacity}
				 , PRICE		 = #{price}
			 WHERE OFFICE_CODE	 = #{officeCode}
			   AND PRD_ITEM_CODE = #{prdItemCode}
		]]>
	</update> 
	
	<update id="updateConfirmEventItem" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateConfirmEventItem
			 * Description : 전체 시술 확인 이벤트 시술 데이터 확정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_PRODUCT_SURGICAL_TMP 
			   SET EVENT_PRODUCT_TITLE = #{eventProductTitle}
				 , EVENT_SALE  		   = #{eventSale}
				 , EVENT_PRICE	 	   = #{eventPrice}
			 WHERE OFFICE_CODE	 	  = #{officeCode}
			   AND EVENT_SEQ	      = #{eventSeq}
			   AND EVENT_SUB_SEQ	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
		]]>
	</update>
	
	<select id="getMaxUpdateSeq" parameterType="hashMap" resultType="int">
		<![CDATA[
			/*
			 * SQL ID      : prd.getMaxUpdateSeq
			 * Description : 최근 업데이트 코드 가져오기
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT IFNULL(MAX(EVENT_UPDATE_SEQ), 1) AS SEQ
	          FROM EVENT_MASTER
			 WHERE OFFICE_CODE	 = #{officeCode}
		]]>
	</select> 
	
	<select id="callSPConfirmTmpData" statementType="CALLABLE" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.callSPConfirmTmpData
			 * Description : 일반 시술,이벤트 최종 업데이트
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.04.22  이승현      테이블 변경
		     */
		]]>
		<![CDATA[
			{
				CALL SP_CONFIRM_TMP_DATA (
	      			  #{officeCode       , mode=IN , jdbcType=VARCHAR}
					, #{startDate        , mode=IN , jdbcType=VARCHAR}
					, #{endDate          , mode=IN , jdbcType=VARCHAR}				
					, #{sysUserId        , mode=IN , jdbcType=VARCHAR}
					, #{result		     , mode=OUT, jdbcType=NUMERIC}
				) 
			}
		]]>		
	</select>
	
	<insert id="insertConfirmEventMaster" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertEventMaster
			 * Description : 업데이트 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    INSERT INTO EVENT_MASTER (
				  OFFICE_CODE
		        , EVENT_UPDATE_SEQ
		        , START_DATE
		        , END_DATE
		        , CREATE_USER
		        , CREATE_DATE
		    ) VALUES (
				  #{officeCode}
		        , (SELECT IFNULL(MAX(EVENT_UPDATE_SEQ),0) + 1 
		             FROM EVENT_MASTER A
					WHERE OFFICE_CODE	= #{officeCode})
				, #{startDate}
				, #{endDate}
				, #{sysUserId}
		        , NOW()
		    )
		]]>	
	</insert>
	
	<insert id="insertConfirmProductSurgical" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertConfirmProductSurgical
			 * Description : 일반 시술 데이터 중분류 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO PRODUCT_SURGICAL (
				  OFFICE_CODE
		        , UPDATE_SEQ
				, PRD_CODE
				, PRD_NAME
		        , PRD_MST_CODE
		        , DISPLAY_YN
				, SORT_ORDER		
				, CREATE_USER
				, CREATE_DATE
			) SELECT 
					OFFICE_CODE	
		          , (SELECT MAX(EVENT_UPDATE_SEQ) 
					   FROM EVENT_MASTER 
					  WHERE OFFICE_CODE = #{officeCode}) AS UPDATE_SEQ
				  , PRD_CODE
				  , PRD_NAME
		          , PRD_MST_CODE
		          , DISPLAY_YN
				  , SORT_ORDER
				  , #{sysUserId} AS CREATE_USER	
				  , NOW() AS CREATE_DATE
			   FROM PRODUCT_SURGICAL_TMP
			  WHERE OFFICE_CODE   = #{officeCode}
		]]>	
	</insert>
	
	<insert id="insertConfirmProductSurgicalSub" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertProductSurgicalSub
			 * Description : 일반 시술 데이터 소분류 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    INSERT INTO PRODUCT_SURGICAL_SUB (
				  OFFICE_CODE
		        , UPDATE_SEQ
				, PRD_SUB_CODE
				, PRD_SUB_NAME
		        , PRD_SUB_CONTENT
		        , PRD_SUB_PRICE
		        , PRD_SUB_TYPE
		        , PRD_SUB_IMAGE
		        , PRD_SUB_VIDEO
		        , PRD_CODE
		        , DISPLAY_YN
				, SORT_ORDER
		        , USE_YN		
				, CREATE_USER
				, CREATE_DATE
			) SELECT 
					OFFICE_CODE	
		          , (SELECT MAX(EVENT_UPDATE_SEQ) 
					   FROM EVENT_MASTER 
					  WHERE OFFICE_CODE   = #{officeCode}) AS UPDATE_SEQ
				  , PRD_SUB_CODE
				  , PRD_SUB_NAME
		          , PRD_SUB_CONTENT
		          , PRD_SUB_PRICE
		          , PRD_SUB_TYPE
		          , PRD_SUB_IMAGE
		          , PRD_SUB_VIDEO
		          , PRD_CODE
		          , DISPLAY_YN
				  , SORT_ORDER
		          , USE_YN
				  ,  #{sysUserId} AS CREATE_USER	
				  , NOW() 		  AS CREATE_DATE
			   FROM PRODUCT_SURGICAL_SUB_TMP
			  WHERE OFFICE_CODE = #{officeCode}
		]]>	
	</insert>
	
	<insert id="insertConfirmProductSurgicalSubDetail" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertConfirmProductSurgicalSubDetail
			 * Description : 소분류 상세 페이지 등록 
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    INSERT INTO PRODUCT_SURGICAL_SUB_DETAIL (
				  OFFICE_CODE
		        , UPDATE_SEQ
				, PRD_SUB_CODE
				, PRD_DETAIL_SEQ
		        , DETAIL_TYPE
		        , DETAIL_CONTENT
		        , DETAIL_CONTENT2
		        , DETAIL_IMAGE
		        , PARENT_DETAIL_SEQ
		        , SORT_ORDER
			) SELECT 
					OFFICE_CODE	
		          , (SELECT MAX(EVENT_UPDATE_SEQ) 
					   FROM EVENT_MASTER 
					  WHERE OFFICE_CODE = #{officeCode}) AS UPDATE_SEQ
				  , PRD_SUB_CODE
				  , PRD_DETAIL_SEQ
		          , DETAIL_TYPE
		          , DETAIL_CONTENT
		          , DETAIL_CONTENT2
		          , DETAIL_IMAGE
		          , PARENT_DETAIL_SEQ
		          , SORT_ORDER
			   FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP
			  WHERE OFFICE_CODE   = #{officeCode}
		]]>	
	</insert>
	
	<insert id="insertConfirmProductSurgicalItem" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertConfirmProductSurgicalItem
			 * Description : 일반 시술 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    INSERT INTO PRODUCT_SURGICAL_ITEM (
				  OFFICE_CODE
		        , UPDATE_SEQ
				, PRD_ITEM_CODE
				, PRD_ITEM_NAME
				, CAPACITY
				, PRICE
				, ANES_YN
				, SURGICAL_TIME
				, SURGICAL_CYCLE
				, SURGICAL_CYCLE_UNIT
				, SURGICAL_PART
				, MANUFACTURER
				, PRD_SUB_CODE
				, DISPLAY_YN
				, SORT_ORDER
				, CREATE_USER
				, CREATE_DATE
			) SELECT 
				     OFFICE_CODE
		           , (SELECT MAX(EVENT_UPDATE_SEQ) 
					    FROM EVENT_MASTER 
					   WHERE OFFICE_CODE   = #{officeCode}) AS UPDATE_SEQ
		           , PRD_ITEM_CODE		   
				   , PRD_ITEM_NAME
				   , CAPACITY
				   , PRICE
			  	   , ANES_YN
				   , SURGICAL_TIME
				   , SURGICAL_CYCLE
				   , SURGICAL_CYCLE_UNIT
				   , SURGICAL_PART
				   , MANUFACTURER
				   , PRD_SUB_CODE
				   , DISPLAY_YN
				   , SORT_ORDER
				   ,  #{sysUserId} AS CREATE_USER
				   , NOW() 			AS CREATE_DATE
				FROM PRODUCT_SURGICAL_ITEM_TMP
			   WHERE OFFICE_CODE   = #{officeCode}
		]]>	
	</insert>					

	<update id="updateConfirmProductSurgicalItem" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateConfirmProductSurgicalItem
			 * Description : 신규 여부 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
       		 UPDATE PRODUCT_SURGICAL_ITEM_TMP 
		        SET NEW_YN = 'N'
			  WHERE OFFICE_CODE = #{officeCode}
		]]>	
	</update>
	
	<insert id="insertConfirmEventGroup" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertConfirmEventGroup
			 * Description : 이벤트 중그룹 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    INSERT INTO EVENT_GROUP (
				  OFFICE_CODE	
				, EVENT_UPDATE_SEQ
		        , EVENT_SEQ        
				, EVENT_NAME	
				, RESERVE_DAY	
				, START_DATE	
				, END_DATE	
				, START_TIME	
				, END_TIME	
				, DISPLAY_YN	
				, SORT_ORDER
				, CREATE_USER	
				, CREATE_DATE	
			) SELECT 
				   OFFICE_CODE	
	             , (SELECT MAX(EVENT_UPDATE_SEQ) 
					  FROM EVENT_MASTER 
					 WHERE OFFICE_CODE   = #{officeCode}) AS UPDATE_SEQ
		         , EVENT_SEQ	         
				 , EVENT_NAME	
				 , RESERVE_DAY	
				 , START_DATE	
				 , END_DATE	
				 , START_TIME	
				 , END_TIME	
				 , DISPLAY_YN	
				 , SORT_ORDER
				 ,  #{sysUserId} AS CREATE_USER
				 , NOW() 		 AS CREATE_DATE
			  FROM EVENT_GROUP_TMP
			 WHERE OFFICE_CODE = #{officeCode}
		]]>	
	</insert>	
	
	<insert id="insertConfirmEventGroupSub" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertConfirmEventGroupSub
			 * Description : 이벤트 소그룹 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    INSERT INTO EVENT_GROUP_SUB (
				  OFFICE_CODE	
				, EVENT_UPDATE_SEQ
		        , EVENT_SEQ			
				, EVENT_SUB_SEQ	
				, EVENT_WORD	
				, EVENT_TITLE	
				, EVENT_CONTENT	
				, EVENT_TYPE	
				, EVENT_IMAGE	
				, EVENT_VIDEO	
				, DISPLAY_YN
		        , SORT_ORDER
				, CREATE_USER	
				, CREATE_DATE	
			) SELECT 
				    OFFICE_CODE	
	              , (SELECT MAX(EVENT_UPDATE_SEQ) 
					   FROM EVENT_MASTER 
					  WHERE OFFICE_CODE   = #{officeCode}) AS UPDATE_SEQ
		          , EVENT_SEQ			  
				  , EVENT_SUB_SEQ	
				  , EVENT_WORD	
				  , EVENT_TITLE	
				  , EVENT_CONTENT	
				  , EVENT_TYPE	
				  , EVENT_IMAGE	
				  , EVENT_VIDEO	
				  , DISPLAY_YN
		          , SORT_ORDER
				  ,  #{sysUserId} AS CREATE_USER
				  , NOW() 		  AS CREATE_DATE
			   FROM EVENT_GROUP_SUB_TMP
			  WHERE OFFICE_CODE = #{officeCode}
		]]>	
	</insert>
	
	<insert id="insertConfirmEventProductSurgical" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertConfirmEventProductSurgical
			 * Description : 이벤트 시술 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO EVENT_PRODUCT_SURGICAL (
				  OFFICE_CODE	
				, EVENT_UPDATE_SEQ	
		        , EVENT_SEQ			
				, EVENT_SUB_SEQ	
				, EVENT_PRODUCT_CODE	
				, EVENT_PRODUCT_TYPE	
				, EVENT_PRODUCT_WORD	
				, EVENT_PRODUCT_TITLE	
				, EVENT_PRODUCT_CONTENT	
				, EVENT_CNT	
				, EVENT_SALE	
				, EVENT_PRICE	
		        , PACKAGE_CONTENT
		        , PACKAGE_DISPLAY_YN
				, DISPLAY_YN
				, SORT_ORDER
				, CREATE_USER	
				, CREATE_DATE
			) SELECT 
				   OFFICE_CODE	
	             , (SELECT MAX(EVENT_UPDATE_SEQ) 
					  FROM EVENT_MASTER 
					 WHERE OFFICE_CODE = #{officeCode}) AS UPDATE_SEQ
		         , EVENT_SEQ			 
				 , EVENT_SUB_SEQ	
				 , EVENT_PRODUCT_CODE	
				 , EVENT_PRODUCT_TYPE	
				 , EVENT_PRODUCT_WORD	
				 , EVENT_PRODUCT_TITLE	
				 , EVENT_PRODUCT_CONTENT	
				 , EVENT_CNT	
				 , EVENT_SALE	
				 , EVENT_PRICE	
		         , PACKAGE_CONTENT
		         , PACKAGE_DISPLAY_YN
				 , DISPLAY_YN
				 , SORT_ORDER
				 ,  #{sysUserId} AS CREATE_USER
				 , NOW() 		 AS CREATE_DATE
			  FROM EVENT_PRODUCT_SURGICAL_TMP
			 WHERE OFFICE_CODE  = #{officeCode} 
		]]>	
	</insert>
	
	<insert id="insertConfirmEventProductSurgicalItem" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertConfirmEventProductSurgicalItem
			 * Description : 이벤트 시술 상품 등록 
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO EVENT_PRODUCT_SURGICAL_ITEM (
				  OFFICE_CODE	
				, EVENT_UPDATE_SEQ	
				, EVENT_SEQ	
				, EVENT_SUB_SEQ	
				, EVENT_PRODUCT_CODE	
				, EVENT_DETAIL_SEQ	
		        , PRD_ITEM_SEQ
				, PRD_ITEM_CODE
				, REMARK	
		        , SORT_ORDER
			) SELECT 
				   OFFICE_CODE	
	             , (SELECT MAX(EVENT_UPDATE_SEQ) 
					  FROM EVENT_MASTER 
					 WHERE OFFICE_CODE = #{officeCode}) AS UPDATE_SEQ
				 , EVENT_SEQ	
				 , EVENT_SUB_SEQ	
				 , EVENT_PRODUCT_CODE	
				 , EVENT_DETAIL_SEQ	
		         , PRD_ITEM_SEQ
		         , PRD_ITEM_CODE
				 , REMARK	
		         , SORT_ORDER
			  FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP
			 WHERE OFFICE_CODE = #{officeCode} 
		]]>	
	</insert>
	
	<insert id="insertConfirmEventProductPage" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertEventProductPage
			 * Description : 이벤트 노출페이지 등록 
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    INSERT INTO EVENT_PRODUCT_PAGE (
				  OFFICE_CODE	
				, EVENT_UPDATE_SEQ	
				, EVENT_SEQ	
				, EVENT_SUB_SEQ	
				, EVENT_PRODUCT_CODE	
				, PRD_SUB_CODE	
		        , DISPLAY_YN
				, SAVE_ORDER	
		        , PRD_SORT_ORDER
			) SELECT 
				   OFFICE_CODE	
	             , (SELECT MAX(EVENT_UPDATE_SEQ) 
					  FROM EVENT_MASTER 
					 WHERE OFFICE_CODE = #{officeCode}) AS UPDATE_SEQ	
				 , EVENT_SEQ	
				 , EVENT_SUB_SEQ	
				 , EVENT_PRODUCT_CODE	
				 , PRD_SUB_CODE	
		         , DISPLAY_YN
			 	 , SAVE_ORDER	
		         , PRD_SORT_ORDER
			  FROM EVENT_PRODUCT_PAGE_TMP
			 WHERE OFFICE_CODE = #{officeCode}
		]]>	
	</insert>
	
	<insert id="updateConfirmEventProductSurgicalTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventProductSurgicalTmp 
			 * Description : 신규 여부 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    UPDATE EVENT_PRODUCT_SURGICAL_TMP 
		       SET NEW_YN = 'N'
			 WHERE OFFICE_CODE = #{officeCode}  
		]]>	
	</insert>		
		
	<insert id="insertAllProductInfo" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertAllProductInfo
			 * Description : 통합상품관리 일반시술 업데이트
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.26  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO ALL_PRODUCT_INFO			
			SELECT 
				   OFFICE_CODE
				 , CONCAT('N', UPDATE_SEQ, PRD_ITEM_CODE) AS ITEM_CODE
				 , @ROWNUM := @ROWNUM + 1 AS ITEM_SEQ		
				 , UPDATE_SEQ
				 , PRD_ITEM_CODE
			  FROM PRODUCT_SURGICAL_ITEM
			  	   INNER JOIN (SELECT @ROWNUM:=0) TMP
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND UPDATE_SEQ    = #{updateSeq}
			 GROUP BY UPDATE_SEQ, PRD_ITEM_CODE
		]]>	
	</insert>
	
	<insert id="insertAllEventProductInfo" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertAllEventProductInfo
			 * Description : 통합상품관리 이벤트 업데이트
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.10.28  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			INSERT INTO ALL_EVENT_PRODUCT_INFO			
			SELECT 
				   OFFICE_CODE
				 , CONCAT('E', EVENT_UPDATE_SEQ, EVENT_SEQ, EVENT_SUB_SEQ, EVENT_PRODUCT_CODE) AS ITEM_CODE
				 , 1 AS ITEM_SEQ	 
				 , EVENT_UPDATE_SEQ
				 , EVENT_SEQ
				 , EVENT_SUB_SEQ
				 , EVENT_PRODUCT_CODE
				 , 0 AS EVENT_DETAIL_SEQ			     
				 , 'ROOT' AS PRD_ITEM_CODE
			  FROM EVENT_PRODUCT_SURGICAL
			 WHERE OFFICE_CODE      = #{officeCode}
			   AND EVENT_UPDATE_SEQ = #{updateSeq}
			UNION ALL
			SELECT 
				   OFFICE_CODE
				 , CONCAT('E', EVENT_UPDATE_SEQ, EVENT_SEQ, EVENT_SUB_SEQ, EVENT_PRODUCT_CODE, EVENT_DETAIL_SEQ) AS ITEM_CODE
				 , PRD_ITEM_SEQ AS ITEM_SEQ
				 , EVENT_UPDATE_SEQ	 
				 , EVENT_SEQ
				 , EVENT_SUB_SEQ
				 , EVENT_PRODUCT_CODE
				 , EVENT_DETAIL_SEQ			     
				 , PRD_ITEM_CODE
			  FROM EVENT_PRODUCT_SURGICAL_ITEM
			 WHERE OFFICE_CODE      = #{officeCode}
			   AND EVENT_UPDATE_SEQ = #{updateSeq}
			 GROUP BY 
				EVENT_UPDATE_SEQ, EVENT_SEQ, EVENT_SUB_SEQ, EVENT_PRODUCT_CODE, EVENT_DETAIL_SEQ, PRD_ITEM_SEQ
		]]>	
	</insert>
	
	<select id="getSummaryUpdateList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="camelHashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.getSummaryUpdateList
			 * Description : 홈페이지 적용, 예정 데이터 리스트
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.11.17  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   P.DISPLAY_TYPE
				 , CONCAT(DATE_FORMAT(E.START_DATE,'%Y년 %m월 %d일'), ' ' , '~', ' ' ,
									DATE_FORMAT(E.END_DATE,'%Y년 %m월 %d일')) EVENT_DATE
				 , CONCAT(REPLACE(
							REPLACE(
								DATE_FORMAT(E.CREATE_DATE,'%Y년 %m월 %d일 %p %I:%i')
								,'AM','오전')
							,'PM','오후')) CREATE_DATE	 
			     , CONCAT(S.SYS_NAME, '(', E.CREATE_USER, ')') AS CREATE_USER			     
			  FROM EVENT_MASTER E
				   INNER JOIN SYS_USER_INFO S          
			          ON E.CREATE_USER = S.SYS_USER_ID			      
				   INNER JOIN (
								SELECT 'apply' AS DISPLAY_TYPE
									 , MAX(EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
								  FROM EVENT_MASTER A 
								 WHERE OFFICE_CODE   = #{officeCode}
								   AND DATE_FORMAT(NOW(), '%Y%m%d') BETWEEN START_DATE AND END_DATE
								 UNION ALL
							    SELECT 'new' AS DISPLAY_TYPE
									 , E1.EVENT_UPDATE_SEQ
								  FROM EVENT_MASTER E1
									   INNER JOIN (
													SELECT MAX(E1.EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
													  FROM EVENT_MASTER E1
														   INNER JOIN (
																		SELECT E.START_DATE	 
																			 , E.END_DATE						 
																		  FROM EVENT_MASTER E
																		 WHERE E.OFFICE_CODE   = #{officeCode}
																		   AND E.EVENT_UPDATE_SEQ = (
																									SELECT MAX(EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
																									  FROM EVENT_MASTER A 
																									 WHERE OFFICE_CODE   = #{officeCode}
																									   AND DATE_FORMAT(NOW(), '%Y%m%d') BETWEEN START_DATE AND END_DATE
																									)
														   ) E2
															ON E1.START_DATE >= E2.END_DATE
													 WHERE E1.OFFICE_CODE   = #{officeCode}
													   AND DATE_FORMAT(NOW(), '%Y%m%d') <= E1.START_DATE					
									   ) E2 
								       ON E1.EVENT_UPDATE_SEQ = E2.EVENT_UPDATE_SEQ
								 WHERE E1.OFFICE_CODE   = #{officeCode}
				   ) P
                   ON E.EVENT_UPDATE_SEQ = P.EVENT_UPDATE_SEQ
			 WHERE E.OFFICE_CODE = #{officeCode}
		]]>
	</select>
	
	<select id="getUpdateDataList" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getUpdateDataList
			 * Description : 최종 업데이트 데이터 리스트 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.03  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   E.OFFICE_CODE
				 , E.EVENT_UPDATE_SEQ
				 , CONCAT(DATE_FORMAT(E.START_DATE,'%Y년 %m월 %d일'), ' ' , '~', ' ' ,
									DATE_FORMAT(E.END_DATE,'%Y년 %m월 %d일')) EVENT_DATE
				 , CONCAT(REPLACE(
							REPLACE(
								DATE_FORMAT(E.CREATE_DATE,'%Y년 %m월 %d일 %p %I:%i')
								,'AM','오전')
							,'PM','오후')) CREATE_DATE	 
			     , CONCAT(S.SYS_NAME, '(', E.CREATE_USER, ')') AS CREATE_USER
			     , IF(E.EVENT_UPDATE_SEQ = P.EVENT_UPDATE_SEQ, 'Y', 'N') AS DISPLAY_YN 
			     , IF(E.EVENT_UPDATE_SEQ = R.EVENT_UPDATE_SEQ, 'Y', 'N') AS NEW_YN 
			  FROM EVENT_MASTER E
				   INNER JOIN SYS_USER_INFO S          
			          ON E.CREATE_USER = S.SYS_USER_ID
			       LEFT OUTER JOIN (-- 현재 적용
									SELECT MAX(EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
								 	  FROM EVENT_MASTER A 
									 WHERE OFFICE_CODE = #{officeCode}
									   AND DATE_FORMAT(NOW(), '%Y%m%d') BETWEEN START_DATE AND END_DATE
			       ) P
			       ON E.EVENT_UPDATE_SEQ = P.EVENT_UPDATE_SEQ
			       LEFT OUTER JOIN (-- 적용 예정
			       	   			    SELECT E1.EVENT_UPDATE_SEQ
									  FROM EVENT_MASTER E1
										   INNER JOIN (
														SELECT MAX(E1.EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
														  FROM EVENT_MASTER E1
															   INNER JOIN (
																			SELECT E.START_DATE	 
																				 , E.END_DATE						 
																			  FROM EVENT_MASTER E
																			 WHERE E.OFFICE_CODE   = #{officeCode}
																			   AND E.EVENT_UPDATE_SEQ = (
																										SELECT MAX(EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
																										  FROM EVENT_MASTER A 
																										 WHERE OFFICE_CODE   = #{officeCode}
																										   AND DATE_FORMAT(NOW(), '%Y%m%d') BETWEEN START_DATE AND END_DATE
																										)
															   ) E2
																ON (E1.START_DATE >= E2.END_DATE OR E1.START_DATE >= E2.START_DATE)
														 WHERE E1.OFFICE_CODE = #{officeCode}
														   AND DATE_FORMAT(NOW(), '%Y%m%d') <= E1.START_DATE					
										   ) E2 
										   ON E1.EVENT_UPDATE_SEQ = E2.EVENT_UPDATE_SEQ
									 WHERE E1.OFFICE_CODE = #{officeCode}
			       ) R
			       ON E.EVENT_UPDATE_SEQ = R.EVENT_UPDATE_SEQ		
			 WHERE E.OFFICE_CODE = #{officeCode}
			 ORDER BY E.EVENT_UPDATE_SEQ DESC 
		]]>
	</select>
	
	<select id="getEventGroupHistory" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventGroupHistory
			 * Description : 이벤트 그룹 업데이트 기록 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.10  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 				
			      EVENT_SEQ											-- 중그룹코드			    
				, EVENT_NAME										-- 중그룹명
				, RESERVE_DAY										-- 예약가능요일			    
				, DATE_FORMAT(START_DATE, '%Y-%m-%d') START_DATE	-- 예약가능시작일
				, DATE_FORMAT(END_DATE, '%Y-%m-%d') END_DATE		-- 예약가능종료일
				, START_TIME										-- 예약가능시작시간
				, END_TIME											-- 예약가능종료시간
				, DISPLAY_YN										-- 노출여부
				, SORT_ORDER										-- 출력순서
				, TRIM(REPLACE(REPLACE(
					REPLACE(REPLACE(
						REPLACE(REPLACE(REPLACE(RESERVE_DAY, 1, '월'), 2, ' 화'), 3, ' 수')
						, 4, ' 목'), 5, ' 금')
					, 6, ' 토'), 0, ' 일')) EVENT_DAY
			    , IFNULL(CONCAT(DATE_FORMAT(START_DATE, '%Y년 %m월 %d일'), ' ~ ',  DATE_FORMAT(END_DATE, '%Y년 %m월 %d일')),'-') EVENT_DATE
			    , CONCAT(CONCAT(SUBSTR(START_TIME,1,2), ':', SUBSTR(START_TIME,3))
						, ' ~ ', 
			            CONCAT(SUBSTR(END_TIME,1,2), ':', SUBSTR(END_TIME,3))) EVENT_TIME
			 FROM EVENT_GROUP
			WHERE OFFICE_CODE	   = #{officeCode}		
		  	  AND EVENT_UPDATE_SEQ = #{eventUpdateSeq}
			ORDER BY SORT_ORDER
		]]>
	</select>
	
	<select id="isEventEditYn" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="boolean">
		<![CDATA[
			/*
			 * SQL ID      : prd.isEventEditYn
			 * Description : 이벤트 시술 수정 가능 여부
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.11.14  이승현      최초 생성
		     */
		]]>
		<![CDATA[		
			SELECT CASE WHEN IF(E1.EVENT_UPDATE_SEQ = E2.EVENT_UPDATE_SEQ, 'Y', 'N') = 'Y' OR 
							 IF(E1.EVENT_UPDATE_SEQ = E3.EVENT_UPDATE_SEQ, 'Y', 'N') = 'Y' THEN 1
						ELSE 0
					END IS_EDIT_YN
			  FROM EVENT_MASTER E1
				   LEFT OUTER JOIN (-- 반영 중인 업데이트
									SELECT MAX(EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
									  FROM EVENT_MASTER A 
									 WHERE OFFICE_CODE   = #{officeCode}
									   AND DATE_FORMAT(NOW(), '%Y%m%d') BETWEEN START_DATE AND END_DATE
				   ) E2
					ON E1.EVENT_UPDATE_SEQ = E2.EVENT_UPDATE_SEQ
				   LEFT OUTER JOIN (-- 반영 예정 업데이트
									SELECT MAX(E.EVENT_UPDATE_SEQ) AS EVENT_UPDATE_SEQ
									  FROM EVENT_MASTER E
										   LEFT OUTER JOIN (
															SELECT EVENT_UPDATE_SEQ
																 , MIN(START_DATE) AS START_DATE
															  FROM EVENT_MASTER A 
															 WHERE OFFICE_CODE   = #{officeCode}
															   AND DATE_FORMAT(NOW(), '%Y%m%d') < START_DATE
										   ) S
										   ON E.EVENT_UPDATE_SEQ = S.EVENT_UPDATE_SEQ
									WHERE E.OFFICE_CODE  = #{officeCode}
									  AND E.START_DATE  <= S.START_DATE
									  AND E.END_DATE     > S.START_DATE
				   ) E3
				   ON E1.EVENT_UPDATE_SEQ = E3.EVENT_UPDATE_SEQ
			WHERE E1.OFFICE_CODE      = #{officeCode}
			  AND E1.EVENT_UPDATE_SEQ = #{eventUpdateSeq}
		]]>	
	</select>
	
	<select id="getEventItemHistory" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO" resultType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getEventItemHistory
			 * Description : 이벤트 시술 업데이트 기록 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.10  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 				
				   X1.EVENT_NAME			-- 중그룹명
			     , X2.EVENT_TITLE			-- 소그룹제목
			     , X2.DISPLAY_YN			-- 소그룹노출여부
                 , X3.EVENT_UPDATE_SEQ		-- 업데이트코드
                 , X3.EVENT_SEQ				-- 이벤트중그룹코드
                 , X3.EVENT_SUB_SEQ			-- 이벤트소그룹코드
                 , X3.EVENT_PRODUCT_CODE	-- 이벤트시술코드
                 , X3.EVENT_PRODUCT_TITLE	-- 이벤트시술제목
			     , X3.EVENT_SALE			-- 이벤트시술할인가
			     , X3.EVENT_PRICE			-- 이벤트시술정상가
			     , X3.PRD_SUB_NAME			-- 자세히연결(소분류명)			     	    
			  FROM EVENT_GROUP X1
				   INNER JOIN EVENT_GROUP_SUB X2
			         ON X1.OFFICE_CODE	    = X2.OFFICE_CODE
                    AND X1.EVENT_UPDATE_SEQ = X2.EVENT_UPDATE_SEQ
			        AND X1.EVENT_SEQ	    = X2.EVENT_SEQ
			       INNER JOIN (
								SELECT 
								 	   EP.OFFICE_CODE
                                     , EP.EVENT_UPDATE_SEQ
									 , EP.EVENT_SEQ
									 , EP.EVENT_SUB_SEQ
									 , EP.EVENT_PRODUCT_CODE
									 , EP.EVENT_PRODUCT_TITLE
									 , EP.EVENT_SALE
									 , EP.EVENT_PRICE
									 , EP.SORT_ORDER
									 , EPP.PRD_SUB_CODE
									 , (SELECT PRD_SUB_NAME
									      FROM PRODUCT_SURGICAL_SUB 
									     WHERE OFFICE_CODE	 = EP.OFFICE_CODE
                                           AND UPDATE_SEQ	 = EPP.EVENT_UPDATE_SEQ
										   AND PRD_SUB_CODE  = EPP.PRD_SUB_CODE) PRD_SUB_NAME
								  FROM EVENT_PRODUCT_SURGICAL EP
									   LEFT OUTER JOIN (
									   					SELECT
															   A.OFFICE_CODE
															 , A.EVENT_UPDATE_SEQ
															 , A.EVENT_SEQ
															 , A.EVENT_SUB_SEQ
															 , A.EVENT_PRODUCT_CODE
															 , A.PRD_SUB_CODE
															 , A.DISPLAY_YN
															 , A.SAVE_ORDER
														  FROM EVENT_PRODUCT_PAGE A
														 WHERE A.OFFICE_CODE      = #{officeCode} 
														   AND A.EVENT_UPDATE_SEQ = #{eventUpdateSeq}
														   AND A.DISPLAY_YN       = 'Y'
														   AND (A.EVENT_SEQ, A.EVENT_SUB_SEQ, A.EVENT_PRODUCT_CODE, A.SAVE_ORDER) 
																IN (
																	SELECT 
																		   EVENT_SEQ
																		 , EVENT_SUB_SEQ
																		 , EVENT_PRODUCT_CODE
																		 , MIN(SAVE_ORDER) AS SAVE_ORDER
																	  FROM EVENT_PRODUCT_PAGE
																	 WHERE OFFICE_CODE   	= #{officeCode} 
																	   AND EVENT_UPDATE_SEQ = #{eventUpdateSeq}
																	   AND DISPLAY_YN 		= 'Y'
																	 GROUP BY 
																		EVENT_SEQ, EVENT_SUB_SEQ, EVENT_PRODUCT_CODE
															   )
									   ) EPP
									   ON EP.OFFICE_CODE   	    = EPP.OFFICE_CODE
                                      AND EP.EVENT_UPDATE_SEQ   = EPP.EVENT_UPDATE_SEQ
									  AND EP.EVENT_SEQ	   	    = EPP.EVENT_SEQ
									  AND EP.EVENT_SUB_SEQ 	    = EPP.EVENT_SUB_SEQ
									  AND EP.EVENT_PRODUCT_CODE = EPP.EVENT_PRODUCT_CODE
								WHERE EP.OFFICE_CODE      = #{officeCode}
                                  AND EP.EVENT_UPDATE_SEQ = #{eventUpdateSeq}
							) X3
						 ON X2.OFFICE_CODE	    = X3.OFFICE_CODE
                        AND X2.EVENT_UPDATE_SEQ = X3.EVENT_UPDATE_SEQ
			            AND X2.EVENT_SEQ        = X3.EVENT_SEQ
			            AND X2.EVENT_SUB_SEQ    = X3.EVENT_SUB_SEQ				 
			WHERE X1.OFFICE_CODE      = #{officeCode}
              AND X1.EVENT_UPDATE_SEQ = #{eventUpdateSeq}
   		]]>
			<if test="eventSeq != null and eventSeq != ''">
				  AND X1.EVENT_SEQ     = #{eventSeq}
			</if>
			<if test="eventSubSeq != null and eventSubSeq != ''">
				  AND X2.EVENT_SUB_SEQ = #{eventSubSeq}
			</if>
			<if test="eventProductTitle != null and eventProductTitle != ''">			    
				  AND X3.EVENT_PRODUCT_TITLE LIKE TRIM(CONCAT('%',#{eventProductTitle},'%'))
			</if>
            ORDER BY 
            	X1.SORT_ORDER, X2.EVENT_SUB_SEQ, X3.SORT_ORDER		
	</select>
	
	<update id="updateHistoryEventProductSurgical" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateHistoryEventProductSurgical
			 * Description : 이벤트 시술 업데이트 내용 수정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.10.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_PRODUCT_SURGICAL 
			   SET EVENT_PRODUCT_TITLE = #{eventProductTitle}
			   	 , EVENT_SALE 		   = #{eventSale}
			   	 , EVENT_PRICE         = #{eventPrice}
			 WHERE OFFICE_CODE        = #{officeCode}
			   AND EVENT_UPDATE_SEQ   = #{eventUpdateSeq}
			   AND EVENT_SEQ          = #{eventSeq}
			   AND EVENT_SUB_SEQ      = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode} 
		]]>
	</update>
	
	<select id="getProductItemHistory" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO" resultType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.getProductItemHistory
			 * Description : 일반 시술 업데이트 기록 조회
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.05.10  이승현      최초 생성
		     */
		]]>
		<![CDATA[
		    SELECT
				   PS.PRD_NAME     	 		 -- 중분류시술명
				 , PSS.PRD_SUB_NAME  		 -- 소분류시술명
				 , PSS.UPDATE_SEQ			 -- 업데이트코드
                 , PSS.PRD_ITEM_CODE		 -- 일반시술코드
				 , PSS.PRD_ITEM_NAME 		 -- 일반시술명	
				 , PSS.CAPACITY		 		 -- 용량
				 , PSS.PRICE				 -- 가격				
				 , IF(IFNULL(PSS.DISPLAY_YN,'N') = 'N', '미노출', '노출') DISPLAY_YN -- 노출여부
			  FROM PRODUCT_SURGICAL PS
				   INNER JOIN (
								SELECT 
									   PSS.OFFICE_CODE
                                     , PSS.UPDATE_SEQ
									 , PSS.PRD_SUB_CODE
									 , PSS.PRD_SUB_NAME
									 , PSS.PRD_CODE
									 , PSS.DISPLAY_YN
									 , PSI.PRD_ITEM_CODE
									 , PSI.PRD_ITEM_NAME
									 , PSI.CAPACITY
									 , PSI.PRICE
									 , PSS.SORT_ORDER
                                     , PSI.SORT_ORDER AS ITEM_SORT_ORDER
								  FROM PRODUCT_SURGICAL_SUB PSS
									   INNER JOIN (
												   SELECT  
												   		  OFFICE_CODE
                                                        , UPDATE_SEQ
													    , PRD_ITEM_CODE					 
														, PRD_ITEM_NAME
														, CAPACITY
														, PRICE
														, PRD_SUB_CODE
							                            , SORT_ORDER
													 FROM PRODUCT_SURGICAL_ITEM 
													WHERE OFFICE_CODE   = #{officeCode}
                                                      AND UPDATE_SEQ    = #{updateSeq}
									  ) PSI
										 ON PSS.OFFICE_CODE   = PSI.OFFICE_CODE
                                        AND PSS.UPDATE_SEQ	  = PSI.UPDATE_SEQ
										AND PSS.PRD_SUB_CODE  = PSI.PRD_SUB_CODE
				   ) PSS
					 ON PS.OFFICE_CODE   = PSS.OFFICE_CODE
                    AND PS.UPDATE_SEQ	 = PSS.UPDATE_SEQ
					AND PS.PRD_CODE      = PSS.PRD_CODE
			  WHERE PS.OFFICE_CODE   = #{officeCode}
                AND PS.UPDATE_SEQ	 = #{updateSeq}		
		]]>
			<if test="prdMstCode != null and prdMstCode != ''">
				    AND PS.PRD_MST_CODE  = #{prdMstCode}
			</if>
			<if test="prdCode != null and prdCode != ''">
				    AND PS.PRD_CODE      = #{prdCode}
			</if>
			<if test="prdSubCode != null and prdSubCode != ''">
				    AND PSS.PRD_SUB_CODE = #{prdSubCode}
			</if>
			<if test="prdItemName != null and prdItemName != ''">			    			    
				    AND PSS.PRD_ITEM_NAME LIKE TRIM(CONCAT('%',#{prdItemName},'%'))
			</if>
			ORDER BY 
				PS.SORT_ORDER, PSS.SORT_ORDER, PSS.ITEM_SORT_ORDER
	</select>
	
	<update id="updateHistoryProductSurgical" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateHistoryProductSurgical
			 * Description : 일반 시술 업데이트 내용 수정
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.10.18  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_ITEM 
			   SET PRD_ITEM_NAME = #{prdItemName}
			   	 , CAPACITY 	 = #{capacity}
			   	 , PRICE         = #{price}
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND UPDATE_SEQ    = #{updateSeq}
			   AND PRD_ITEM_CODE = #{prdItemCode} 
		]]>
	</update>
	
	<update id="updatePrdSortOrder" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updatePrdSortOrder
			 * Description : 중분류 정렬 순서 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.28  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_TMP
			   SET SORT_ORDER    = #{sortOrder}
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_CODE	 	 = #{prdCode}	
		]]>	   				   	
	</update>
	
	<update id="updatePrdSubSortOrder" parameterType="com.wwl.app.domain.prd.dto.PrdProductDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updatePrdSubSortOrder
			 * Description : 소분류 정렬 순서 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.27  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_SUB_TMP
			   SET SORT_ORDER    = #{sortOrder}
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND PRD_SUB_CODE	 = #{prdSubCode}	
		]]>	   				   	
	</update>
	
	<update id="updateEventPageSortOrder" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventPageSortOrder
			 * Description : 상세 페이지 이벤트 페이지 정렬 순서 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.27  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_PRODUCT_PAGE_TMP
			   SET PRD_SORT_ORDER     = #{sortOrder}
			 WHERE OFFICE_CODE        = #{officeCode}
			   AND EVENT_SEQ 		  = #{eventSeq}
			   AND EVENT_SUB_SEQ	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
			   AND PRD_SUB_CODE	      = #{prdSubCode}	
		]]>	   				   	
	</update>
	
	<update id="updatePrdItemSortOrder" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updatePrdItemSortOrder
			 * Description : 상세 페이지 일반 시술 정렬 순서 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.27  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE PRODUCT_SURGICAL_ITEM_TMP
			   SET SORT_ORDER 	 = #{sortOrder}
			 WHERE OFFICE_CODE   = #{officeCode}			   
			   AND PRD_ITEM_CODE = #{prdItemCode}	
		]]>	   				   	
	</update>
	
	<update id="updateEventGroupSortOrder" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventGroupSortOrder
			 * Description : 이벤트 그룹 정렬 순서 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.28  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_GROUP_TMP
			   SET SORT_ORDER 	 = #{sortOrder}
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND EVENT_SEQ     = #{eventSeq} 
		]]>
	</update>
		
	<update id="updateEventGroupSubSortOrder" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventGroupSubSortOrder
			 * Description : 이벤트 소그룹 정렬 순서 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.28  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_GROUP_SUB_TMP
			   SET SORT_ORDER 	 = #{sortOrder}
			 WHERE OFFICE_CODE   = #{officeCode}
			   AND EVENT_SEQ     = #{eventSeq} 
			   AND EVENT_SUB_SEQ = #{eventSubSeq}
		]]>
	</update>
	
	<update id="updateEventProductSortOrder" parameterType="com.wwl.app.domain.prd.dto.PrdEventDTO">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateEventProductSortOrder
			 * Description : 이벤트 시술 정렬 순서 변경
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.28  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE EVENT_PRODUCT_SURGICAL_TMP
			   SET SORT_ORDER 	 	  = #{sortOrder}
			 WHERE OFFICE_CODE   	  = #{officeCode}
			   AND EVENT_SEQ     	  = #{eventSeq} 
			   AND EVENT_SUB_SEQ 	  = #{eventSubSeq}
			   AND EVENT_PRODUCT_CODE = #{eventProductCode}
		]]>
	</update>
	
	<select id="callSPCoverProductData" statementType="CALLABLE" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.callSPCoverProductData
			 * Description : 일반 시술 불러오기(FROM -> TO)
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.28  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			{
				CALL SP_COVER_PRODUCT_DATA (
	      			  #{fOfficeCode      , mode=IN , jdbcType=VARCHAR}
					, #{tOfficeCode      , mode=IN , jdbcType=VARCHAR}				
					, #{sysUserId        , mode=IN , jdbcType=VARCHAR}
					, #{result		     , mode=OUT, jdbcType=NUMERIC}
				) 
			}
		]]>		
	</select>
	
	<select id="callSPCoverEventData" statementType="CALLABLE" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.callSPCoverEventData
			 * Description : 이벤트 시술 불러오기(FROM -> TO)
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			{
				CALL SP_COVER_EVENT_DATA (
	      			  #{fOfficeCode      , mode=IN , jdbcType=VARCHAR}
					, #{tOfficeCode      , mode=IN , jdbcType=VARCHAR}				
					, #{sysUserId        , mode=IN , jdbcType=VARCHAR}
					, #{result		     , mode=OUT, jdbcType=NUMERIC}
				) 
			}
		]]>		
	</select>
	
	<select id="getCopyProductImageList" parameterType="hashMap" resultType="camelHashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.getCopyProductImageList
			 * Description : 일반 시술 불러오기시 복사할 이미지 리스트
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.09.20  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			SELECT 
				   CONCAT('/home/files/', H1.HOSPITAL_CODE, '/', H1.OFFICE_CODE, P1.PRD_SUB_IMAGE) AS FILE_PATH     
			     , CONCAT('/home/files/', #{tHospitalCode}, '/', #{tOfficeCode}, P1.PRD_SUB_IMAGE) AS COPY_PATH	
			  FROM PRODUCT_SURGICAL_SUB_TMP P1
			   	   INNER JOIN HOSPITAL_OFFICE_INFO H1
          	          ON P1.OFFICE_CODE = H1.OFFICE_CODE 
			 WHERE P1.OFFICE_CODE   = #{fOfficeCode}
			   AND (P1.PRD_SUB_IMAGE IS NOT NULL AND P1.PRD_SUB_IMAGE <> '')
		]]>
	</select>
	
	<update id="updateNoticeUserReset" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateNoticeUserReset
			 * Description : 업데이트 알림 계정 초기화
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.11.15  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE SYS_USER_INFO
			   SET NOTICE_USER = 'N'
			 WHERE SYS_USER_ID NOT IN
		]]>
		<foreach collection="userList" item="item" open="(" close=")" separator=",">
 			#{item}
		</foreach>
	</update>
	
	<update id="updateNoticeUser" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.updateNoticeUser
			 * Description : 업데이트 알림 계정 등록
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.11.15  이승현      최초 생성
		     */
		]]>
		<![CDATA[
			UPDATE SYS_USER_INFO
			   SET NOTICE_USER = 'Y'
			 WHERE SYS_USER_ID IN
		]]>
		<foreach collection="userList" item="item" open="(" close=")" separator=",">
 			#{item}
		</foreach>
	</update>
	
	<delete id="deleteSPProductSurgicalMaster" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPProductSurgicalMaster
			 * Description : 해당지점 대분류 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM PRODUCT_SURGICAL_MASTER
			 WHERE OFFICE_CODE	= #{tOfficeCode}	
   		]]>
	</delete>	 
	 
	<insert id="insertSPProductSurgicalMaster" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPProductSurgicalMaster
			 * Description : 해당지점 대분류 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO PRODUCT_SURGICAL_MASTER
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , PRD_MST_CODE	
				 , PRD_MST_NAME	
				 , DISPLAY_YN	
				 , SORT_ORDER	
				 , #{createUser} AS CREATE_USER	
				 , NOW() 		  AS CREATE_DATE	
			  FROM PRODUCT_SURGICAL_MASTER       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>

	<delete id="deleteSPProductSurgicalTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPProductSurgicalTmp
			 * Description : 중분류 관련 TMP 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM PRODUCT_SURGICAL_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>	 
	 
	<insert id="insertSPProductSurgicalTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPProductSurgicalTmp
			 * Description : 해당지점 중분류 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO PRODUCT_SURGICAL_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , PRD_CODE	
				 , PRD_NAME	
				 , PRD_MST_CODE	
				 , DISPLAY_YN	
				 , SORT_ORDER	
				 , #{createUser} AS CREATE_USER	
				 , NOW() 		  AS CREATE_DATE	
			  FROM PRODUCT_SURGICAL_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>
	 
	<delete id="deleteSPProductSurgicalSubTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPProductSurgicalSubTmp
			 * Description : 해당지점 소분류 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM PRODUCT_SURGICAL_SUB_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}
   		]]>
	</delete>	 
       
	<insert id="insertSPProductSurgicalSubTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPProductSurgicalSubTmp
			 * Description : 대분류 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO PRODUCT_SURGICAL_SUB_TMP
				SELECT 
					   #{tOfficeCode}   AS OFFICE_CODE				
					 , PRD_SUB_CODE	
					 , PRD_SUB_NAME	
					 , PRD_SUB_CONTENT	
					 , PRD_SUB_PRICE	
					 , PRD_SUB_TYPE	
					 , PRD_SUB_IMAGE	
					 , PRD_SUB_VIDEO	
					 , PRD_CODE	
					 , DISPLAY_YN	
					 , SORT_ORDER	
					 , USE_YN
					 , #{createUser} AS CREATE_USER	
					 , NOW() 		  AS CREATE_DATE	
				  FROM PRODUCT_SURGICAL_SUB_TMP       
				 WHERE OFFICE_CODE	 = #{fOfficeCode}
   		]]>
	</insert>

	<delete id="deleteSPProductSurgicalSubDetailTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPProductSurgicalSubDetailTmp
			 * Description : 해당 지점 소분류 상세 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>	 
	 
	<insert id="insertSPProductSurgicalSubDetailTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPProductSurgicalSubDetailTmp
			 * Description : 해당 지점 소분류 상세 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO PRODUCT_SURGICAL_SUB_DETAIL_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , PRD_SUB_CODE	
				 , PRD_DETAIL_SEQ	
				 , DETAIL_TYPE	
				 , DETAIL_CONTENT	
				 , DETAIL_CONTENT2	
				 , DETAIL_IMAGE	
				 , PARENT_DETAIL_SEQ	
				 , SORT_ORDER		
			  FROM PRODUCT_SURGICAL_SUB_DETAIL_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>
	 
	<delete id="deleteSPProductSurgicalSubCategory" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPProductSurgicalSubCategory
			 * Description : 소분류 상세 카테고리 순서 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM PRODUCT_SURGICAL_SUB_CATEGORY
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>	 
       
	<insert id="insertSPProductSurgicalSubCategory" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPProductSurgicalSubCategory
			 * Description : 소분류 상세 카테고리 순서 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO PRODUCT_SURGICAL_SUB_CATEGORY
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , PRD_SUB_CODE	
				 , CATEGORY_CODE	
				 , SORT_ORDER	
			  FROM PRODUCT_SURGICAL_SUB_CATEGORY       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>

	<delete id="deleteSPProductSurgicalItemTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPProductSurgicalItemTmp
			 * Description : 일반시술 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM PRODUCT_SURGICAL_ITEM_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>	 
	 
	<insert id="insertSPProductSurgicalItemTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPProductSurgicalItemTmp
			 * Description : 일반시술 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO PRODUCT_SURGICAL_ITEM_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , PRD_ITEM_CODE	
				 , PRD_ITEM_NAME	
				 , CAPACITY	
				 , PRICE	
				 , ANES_YN	
				 , SURGICAL_TIME	
				 , SURGICAL_CYCLE	
				 , SURGICAL_CYCLE_UNIT	
				 , SURGICAL_PART	
				 , MANUFACTURER	
				 , PRD_SUB_CODE	
				 , DISPLAY_YN	
				 , SORT_ORDER	
				 , 'Y' AS NEW_YN
				 , #{createUser} AS CREATE_USER	
				 , NOW() 		  AS CREATE_DATE	
			  FROM PRODUCT_SURGICAL_ITEM_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>
	        
	<delete id="deleteSPEventGroupTmp" parameterType="hashMap" >
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPEventGroupTmp
			 * Description : 이벤트 그룹 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM EVENT_GROUP_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>	 

	<insert id="insertSPEventGroupTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPEventGroupTmp
			 * Description : 이벤트 그룹 관련 모든 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO EVENT_GROUP_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , EVENT_SEQ	
				 , EVENT_NAME	
				 , RESERVE_DAY	
				 , START_DATE	
				 , END_DATE	
				 , START_TIME	
				 , END_TIME	
				 , DISPLAY_YN	
				 , SORT_ORDER		
				 , #{createUser} AS CREATE_USER	
				 , NOW() 		  AS CREATE_DATE	
			  FROM EVENT_GROUP_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>	 

	<delete id="deleteSPEventGroupSubTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPEventGroupSubTmp
			 * Description : 이벤트 소그룹 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM EVENT_GROUP_SUB_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>
	 
	<insert id="insertSPEventGroupSubTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPEventGroupSubTmp
			 * Description : 이벤트 소그룹 관련 모든 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO EVENT_GROUP_SUB_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , EVENT_SEQ	
				 , EVENT_SUB_SEQ	
				 , EVENT_WORD	
				 , EVENT_TITLE	
				 , EVENT_CONTENT	
				 , EVENT_TYPE	
				 , EVENT_IMAGE	
				 , EVENT_VIDEO	
				 , DISPLAY_YN	
				 , SORT_ORDER	
				 , #{createUser} AS CREATE_USER	
				 , NOW() 		  AS CREATE_DATE	
			  FROM EVENT_GROUP_SUB_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>	 
       
	<delete id="deleteSPEventProductSurgicalTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPEventProductSurgicalTmp
			 * Description : 이벤트 시술 생성 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM EVENT_PRODUCT_SURGICAL_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>
	 
	<insert id="insertSPEventProductSurgicalTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPEventProductSurgicalTmp
			 * Description : 이벤트 시술 생성 관련 모든 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO EVENT_PRODUCT_SURGICAL_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , EVENT_SEQ	
				 , EVENT_SUB_SEQ	
				 , EVENT_PRODUCT_CODE	
				 , EVENT_PRODUCT_TYPE	
				 , EVENT_PRODUCT_WORD	
				 , EVENT_PRODUCT_TITLE	
				 , EVENT_PRODUCT_CONTENT	
				 , EVENT_CNT	
				 , EVENT_SALE	
				 , EVENT_PRICE	
				 , PACKAGE_CONTENT
				 , PACKAGE_DISPLAY_YN
				 , DISPLAY_YN	
				 , SORT_ORDER
				 , 'Y' AS NEW_YN
				 , #{createUser} AS CREATE_USER	
				 , NOW() 		  AS CREATE_DATE	
			  FROM EVENT_PRODUCT_SURGICAL_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>	 

	<delete id="deleteSPEventProductSurgicalItemTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPEventProductSurgicalItemTmp
			 * Description : 이벤트 시술상품 생성 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>
     
	<insert id="insertSPEventProductSurgicalItemTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPEventProductSurgicalItemTmp
			 * Description : 이벤트 시술상품 생성 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO EVENT_PRODUCT_SURGICAL_ITEM_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , EVENT_SEQ	
				 , EVENT_SUB_SEQ	
				 , EVENT_PRODUCT_CODE	
				 , EVENT_DETAIL_SEQ	
				 , PRD_ITEM_SEQ
				 , PRD_ITEM_CODE	
				 , REMARK		
				 , SORT_ORDER
			  FROM EVENT_PRODUCT_SURGICAL_ITEM_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>	 

	<delete id="deleteSPEventProductPageTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.deleteSPEventProductPageTmp
			 * Description : 이벤트 노출페이지 생성 관련 모든 데이터 삭제
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			DELETE FROM EVENT_PRODUCT_PAGE_TMP
			 WHERE OFFICE_CODE	 = #{tOfficeCode}			
   		]]>
	</delete>
     
	<insert id="insertSPEventProductPageTmp" parameterType="hashMap">
		<![CDATA[
			/*
			 * SQL ID      : prd.insertSPEventProductPageTmp
			 * Description : 이벤트 노출페이지 생성 관련 모든 데이터 생성
			 * Modification Information
		     * Date        Author      Content
			 * ----------  ----------  ----------------------
			 * 2022.07.29  이승현      최초 생성
		     */
		]]>
		<![CDATA[				
			INSERT INTO EVENT_PRODUCT_PAGE_TMP
			SELECT 
				   #{tOfficeCode}   AS OFFICE_CODE				
				 , EVENT_SEQ	
				 , EVENT_SUB_SEQ	
				 , EVENT_PRODUCT_CODE	
				 , PRD_SUB_CODE	
				 , DISPLAY_YN	
				 , SAVE_ORDER	
				 , PRD_SORT_ORDER		
			  FROM EVENT_PRODUCT_PAGE_TMP       
			 WHERE OFFICE_CODE	 = #{fOfficeCode}			
   		]]>
	</insert>	 
	
</mapper>